{"version":3,"sources":["providers/wallets.ts","context/walletContext.ts","components/WalletLoader.tsx","reducers/walletReducer.ts","components/Transactions.tsx","components/SpeedDial.tsx","components/TransactionModal.tsx","components/Tokens.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["addWallet","wallet","a","arweave","Arweave","init","host","port","address","wallets","jwkToAddress","ar","getBalance","balance","winstonToAr","console","log","getTokens","axios","post","query","res","tokens","data","transactions","edges","vertoContracts","map","node","tags","filter","tag","name","value","smartweaveContracts","edge","contracts","Set","concat","Promise","all","contract","readContract","then","contractState","balances","ticker","tokenBalances","getTxns","catch","err","getFee","size","get","sendTransfer","transfer","key","createTransaction","target","to","quantity","arToWinston","amount","transaction","addTag","sign","response","sendTokens","interactWriteDryRun","qty","function","toString","updateTokens","token","initWalletState","WalletContext","createContext","state","dispatch","WalletLoader","props","toast","useToast","React","useContext","useState","loading","setLoading","setAddress","onDrop","acceptedFiles","reader","FileReader","onabort","onerror","onload","event","type","walletObject","JSON","parse","result","walletDeets","set","stringify","onClose","payload","title","status","duration","position","description","readAsText","addAddress","Stack","align","Spinner","Box","w","borderStyle","borderWidth","getRootProps","getInputProps","flexDirection","padding","Text","fontSize","textAlign","Input","placeholder","onChange","evt","Button","isDisabled","onClick","walletReducer","action","existingWallets","length","push","Transactions","txns","setTxns","useEffect","Accordion","allowToggle","allowMultiple","txn","bg","border","borderColor","flex","id","SimpleGrid","columns","fee","recipient","Fragment","Heading","Txn","SpeedDial","ref","isOpen","setIsOpen","wrapperRef","useRef","SpeedDialItem","isInline","bottom","right","IconButton","aria-label","icon","FaWallet","isRound","del","onOpen","handleClickOutside","current","contains","document","addEventListener","removeEventListener","style","FaMinus","FaPlus","div","initial","opacity","animate","y","exit","TransferModal","modal","setOpen","setAmount","setFee","setToAddress","next","setNext","validAmount","setValid","updateFee","cost","initiateTransfer","setMax","parseFloat","Modal","closeOnOverlayClick","isCentered","closeModal","spacing","FormControl","isInvalid","e","onBlur","FormErrorMessage","InputGroup","toFixed","children","toLocaleString","minimumFractionDigits","split","color","AddToken","valid","update","updatedTokens","Tokens","openModal","setTo","Blob","Math","random","slice","initTokenTransfer","message","fontWeight","Divider","Popover","closeOnBlur","zIndex","App","useReducer","useDisclosure","WalletModal","Provider","ThemeProvider","theme","Tabs","isFitted","left","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.216a781d.chunk.js","sourcesContent":["import Arweave from 'arweave'\nimport axios from 'axios'\nimport { readContract, interactWriteDryRun, interactWrite, interactRead } from 'smartweave'\nimport { tokenBalance } from '../context/walletContext'\nexport const addWallet = async (wallet: any): Promise<{ address: string, balance: string }> => {\n  let arweave = Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n  })\n  let address = ''\n  if (typeof wallet === \"string\") address = wallet;\n  else address = await arweave.wallets.jwkToAddress(wallet)\n  let balance = arweave.ar.winstonToAr(await arweave.wallets.getBalance(address))\n  console.log(address);\n  console.log(balance);\n\n  return { address, balance }\n}\n\nexport const getTokens = async (address: string): Promise<any[]> => {\n  let arweave = Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n  })\n  \n  let res = await axios.post('https://arweave.net/graphql', {\n    query: `query {\n      transactions(first:20,\n          owners:[\"${address}\"],\n          tags: [{\n              name: \"Exchange\",\n            values:[\"Verto\"]\n          }, {name:\"Type\", values:[\"Buy\", \"Sell\"]}]\n      ) {\n          edges {\n              node {\n                  id\n                  tags {\n                    name\n                    value\n                  }\n              }\n          }\n      }\n  }`\n  })\n  let tokens = res.data.data.transactions.edges\n  let vertoContracts = tokens.map((node: any) => node.node.tags.filter((tag: { name: string, value: string }) => tag.name === \"Token\")[0].value)\n  res = await axios.post('https://arweave.net:443/graphql',{query:`query {\n      transactions(first:20,\n        \towners:[\"${address}\"]\n          tags: [{\n              name: \"App-Name\",\n            values:[\"SmartWeaveAction\"]\n          }]\n      ) {\n          edges {\n              node {\n                  id\n                  tags {\n                    name\n                    value\n                  }\n              }\n          }\n      }\n  }`})\n  console.log('Verto contract interactions', vertoContracts)\n  let smartweaveContracts = res.data.data.transactions.edges.map((edge:any) => edge.node.tags.filter((tag:any) => (tag.name === 'Contract'))[0].value)\n  console.log('Generic Smartweave contract interactions', smartweaveContracts)\n  let contracts = [...new Set(vertoContracts.concat(smartweaveContracts))]\n  let tokenBalances = await Promise.all(contracts.map((contract: any) =>\n    readContract(arweave, contract).then(contractState => {\n      console.log(contractState)\n      if (contractState.balances)\n      return { 'balance': contractState.balances[address], 'ticker': contractState.ticker, 'contract': contract }\n    })))\n  return tokenBalances\n}\n\nexport const getTxns = async (address: string): Promise<any> => {\n  return axios.post('https://arweave.net/graphql', {\n      query: `query {\n                transactions(owners:  [\"${address}\"]) {\n                  edges {\n                    node {\n                      id\n                      owner {\n                        address\n                      }\n                      recipient\n                      tags {\n                        name\n                        value\n                      }\n                      fee {\n                        winston\n                        ar\n                      }\n                      quantity {\n                        winston\n                        ar\n                      }\n                    }\n                  }\n                }\n              }`\n    })\n      .then((res) => {\n        console.log(res.data)\n        return res.data.data.transactions.edges\n      })\n    .catch((err) => {\n      console.log(err)\n      return []\n    })\n}\n\nexport const getFee = async (size: number): Promise<string> => {\n  let res = await axios.get(`https://arweave.net:443/price/${size}`)\n  let arweave = Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n  })\n  return arweave.ar.winstonToAr(res.data)\n}\n\nexport const sendTransfer = async (transfer: any, key: any): Promise<string> => {\n  try {\n    let arweave = Arweave.init({\n      host: 'arweave.net',\n      port: 443,\n    })\n    let transaction = await arweave.createTransaction({\n      target: transfer.to,\n      quantity: arweave.ar.arToWinston(transfer.amount)\n    }, key);\n\n    transaction.addTag('App-Name', 'ArMob 2.0')\n    await arweave.transactions.sign(transaction, key);\n\n    const response = await arweave.transactions.post(transaction);\n    console.log(response);\n  }\n  catch (err) {\n    console.log(`Error sending tranfer - ${err}`)\n    return `Error submitting transaction - ${err}`\n  }\n  return 'Transaction submitted successfully'\n}\n\nexport const sendTokens = async (contract: string, amount: number, target: string, key: any): Promise<string | boolean> => {\n  try {\n    let arweave = Arweave.init({\n      host: 'arweave.net',\n      port: 443,\n    })\n    let res = await interactWriteDryRun(arweave, key, contract, {\n      target: target,\n      qty: amount,\n      function: 'transfer'\n    })\n    console.log('Dry-run result is:',res)\n   /* if (res.type === 'ok') {\n     let txId = await interactWrite(arweave, key, contract, {\n      target: target,\n      qty: amount,\n      function: 'transfer'\n    })\n    console.log(res)\n    return txId\n  }*/\n    return \"success!\"\n  }\n  catch (err) {\n    console.log(err)\n    return (err.toString())\n  }\n}\n\nexport const updateTokens = async (tokens: tokenBalance[], address: string): Promise<tokenBalance[] | {}> => {\n  let arweave = Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n  })\n  let tokenBalances = await Promise.all(tokens.map((token: tokenBalance) =>\n    readContract(arweave, token.contract).then(contractState => {\n      console.log(contractState)\n      if (contractState.balances)\n      return { 'balance': contractState.balances[address] as number, 'ticker': contractState.ticker as string, 'contract': token.contract }\n      else return []\n    })))\n  return tokenBalances\n}","import { createContext } from 'react'\n\nexport type tokenBalance = {\n    ticker: string,\n    balance: number,\n    contract: string\n}\n\nexport type wallet = {\n    address: string,\n    key?: any\n}\nexport type walletState = {\n    key : any,\n    balance: string,\n    address: string,\n    tokens?: tokenBalance[],\n    wallets?: wallet[]\n}\nexport const initWalletState: walletState = {\n        key: {} as any,\n        balance: '',\n        address: ''\n}\n\nconst WalletContext = createContext<{state:walletState, dispatch: React.Dispatch<any>}>({state: initWalletState, dispatch: () => null} )\n\nexport { WalletContext as default }","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport { Box, Button, Input, Spinner, Stack, Text, useToast } from '@chakra-ui/core'\nimport { get, set} from 'idb-keyval'\nimport { addWallet, getTokens } from '../providers/wallets'\nimport WalletContext from '../context/walletContext'\n\nconst WalletLoader = (props :any) => {\n  const toast = useToast()\n  const { state, dispatch } = React.useContext(WalletContext)\n  const [loading, setLoading] = React.useState(false)\n  const [address, setAddress] = React.useState('')\n\n /* React.useEffect(() => {\n    const loadWallet = async (data: string) => {\n      let wallet = JSON.parse(data)\n      console.log(JSON.parse(data))\n      let walletDeets = await addWallet(wallet)\n      dispatch({ type: 'ADD_WALLET', payload: { ...walletDeets, key: wallet } })\n    }\n    get('wallet').then((data : any) => {\n    if (data) {\n      try{\n      loadWallet(data)\n      }\n      catch (err) { console.log('Error loading wallet', err)}\n    }})\n  },[])*/\n\n  const onDrop = async (acceptedFiles: any) => {\n    const reader = new FileReader()\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = async function (event) {\n      setLoading(true)\n      if (acceptedFiles[0].type === \"application/json\") {\n        try {\n          let walletObject = JSON.parse(event!.target!.result as string)\n          let walletDeets = await addWallet(walletObject)\n          let tokens = await getTokens(walletDeets.address);\n          await set('wallet', JSON.stringify(walletObject))\n          props.onClose();\n          dispatch({ type: 'ADD_WALLET', payload: { ...walletDeets, key: walletObject, tokens: tokens } })\n        }\n        catch (err) {\n          console.log('Invalid json in wallet file')\n          toast({\n            title: 'Error loading wallet',\n            status: 'error',\n            duration: 3000,\n            position: 'bottom-left',\n            description: 'Invalid JSON in wallet file'\n          })\n        }\n      }\n      else {\n        console.log('Invalid file type')\n        toast({\n          title: 'Error loading wallet',\n          status: 'error',\n          duration: 3000,\n          position: 'bottom-left',\n          description: 'Invalid file type'\n        })\n      }\n      setLoading(false)\n    }\n    try {\n      reader.readAsText(acceptedFiles[0])\n    }\n    catch (err) {\n      console.log('Invalid file type')\n      toast({\n        title: 'Error loading wallet',\n        status: 'error',\n        duration: 3000,\n        position: 'bottom-left',\n        description: 'Invalid file type'\n      })\n    }\n  }\n\n  const addAddress = async () =>\n  {\n    setLoading(true)\n    let walletDeets = await addWallet(address);\n    let tokens = await getTokens(address);\n    await set('wallet', address)\n    props.onClose();\n    dispatch({ type: 'ADD_WALLET', payload: { ...walletDeets, key: '', tokens: tokens } })\n  }\n\n  return (<Stack align=\"center\">\n    {loading ? <Spinner /> :\n    <Box w=\"100%\" borderStyle='dashed' borderWidth=\"2px\">\n      <Dropzone onDrop={onDrop}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <Box flexDirection=\"row\" padding={3}><Text fontSize={14} textAlign=\"center\">Drop a wallet file or click to load wallet</Text></Box>\n            </div>\n          </section>\n        )}\n      </Dropzone> \n    </Box>\n    }\n    {!loading && <Stack w=\"100%\">\n      <Input w=\"93%%\" placeholder=\"Wallet address\" onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {setAddress(evt.target.value)}} />\n      <Button isDisabled={(address === '')} onClick={() => addAddress()}>Track Address</Button>\n      </Stack>}\n    </Stack>\n  )\n}\n\nexport default WalletLoader","import { walletState, wallet } from '../context/walletContext';\n\nconst walletReducer = (state: walletState, action: { type: string, payload: any }): walletState => {\n    console.log('Current state is:', state)\n    console.log('Action requested is:', action)\n    switch (action.type) {\n        case 'ADD_WALLET': {\n            let existingWallets = state.wallets?.filter((wallet: wallet)=> wallet.address === action.payload.address)\n            let wallets = state.wallets\n            if (existingWallets && existingWallets.length === 0)\n                wallets?.push({address:action.payload.address, key:action.payload.key})\n            return {\n            ...state,\n            key: action.payload.key,\n            balance: action.payload.balance,\n            address: action.payload.address,\n            tokens: action.payload.tokens,\n            wallets: wallets\n        }};\n        case 'UPDATE_TOKENS': {\n            return {\n                ...state,\n                tokens: action.payload.tokens\n            }\n        }\n        default: return state\n    }\n}\n\nexport default walletReducer","import React from 'react'\nimport { Text, Accordion, AccordionItem, AccordionHeader, AccordionPanel, AccordionIcon, SimpleGrid, Box, Heading, } from '@chakra-ui/core'\nimport WalletContext from '../context/walletContext'\nimport { getTxns } from '../providers/wallets'\n\nconst Txn = (txn: any) => {\n  return (\n    <AccordionItem>\n      <AccordionHeader bg=\"white\" border=\"1px\" borderColor=\"grey\">\n        <Box flex=\"1\" textAlign=\"left\">\n          ID: {txn.node.id}\n        </Box>\n\n        <AccordionIcon />\n      </AccordionHeader>\n      <AccordionPanel border=\"1px\">\n        <SimpleGrid columns={2}>\n          <Text fontSize={10}>Fee: </Text>\n          <Text fontSize={10}>{txn.node.fee.ar} AR</Text>\n          {txn.node.recipient && <React.Fragment><Text fontSize={10}>Recipient: </Text>\n            <Text fontSize={10}>{txn.node.recipient}</Text>\n            <Text fontSize={10}>Amount: </Text>\n            <Text fontSize={10}>{txn.node.quantity.ar} AR</Text></React.Fragment>}\n        </SimpleGrid>\n        <Heading size=\"xs\">Transaction Tags</Heading>\n        {txn.node.tags.map((tag: any) => {\n          return (<SimpleGrid key={txn.node.id+tag.name} columns={2}>\n            <Text fontSize={10} key={tag.toString()}>{tag.name}</Text>\n            <Text fontSize={10} key={tag.name+tag.value}>{tag.value}</Text>\n          </SimpleGrid>\n          )\n        })}\n      </AccordionPanel>\n    </AccordionItem>\n\n  )\n}\nconst Transactions = () => {\n  const { state } = React.useContext(WalletContext)\n  const [txns, setTxns] = React.useState([])\n\n  React.useEffect(() => {\n    if (state.address !== '') {\n      getTxns(state.address)\n    .then((txns) => { console.log(txns)\n      setTxns(txns)})\n    }\n    else setTxns([])\n  }, [state.address])\n\n  return (<Box>\n    <Accordion allowToggle allowMultiple w=\"100%\">\n      {/* @ts-ignore */}\n      {txns.length > 0 ? txns.map((txn) => Txn(txn)) : null}\n    </Accordion>\n  </Box>\n  )\n}\n\nexport default Transactions","import React from 'react';\nimport { FaPlus, FaMinus, FaWallet } from 'react-icons/fa'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Stack, IconButton, Text } from '@chakra-ui/core'\nimport { del } from 'idb-keyval'\nimport WalletContext from '../context/walletContext'\n\nconst SpeedDial = (props : any)=> {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const wrapperRef = React.useRef(null);\n  \n  const SpeedDialItem = () => {\n    const { state, dispatch } = React.useContext(WalletContext)\n  \n    return (\n      <Stack isInline\n        key=\"me\"\n        position=\"fixed\"\n        bottom=\"40px\"\n        right=\"0px\"\n        align=\"center\">\n        <Text fontSize={11}>{state.address === '' ? \"Open Wallet\" : \"Close Wallet\"}</Text>\n        <IconButton aria-label=\"wallet\" icon={FaWallet} isRound onClick={async () => {\n          if (state.address !== '') {\n            await del('wallet');\n            dispatch({ type: 'ADD_WALLET', payload: { address: '', balance: '', key: '' } });\n          }\n          //@ts-ignore\n          else {\n            props.onOpen()\n          }\n          setIsOpen(false)\n        }} />\n      </Stack>\n    )\n  }\n  const useOutsideAlerter = (ref: any) => {\n    React.useEffect(() => {\n      function handleClickOutside(event: MouseEvent) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setIsOpen(false)\n        }\n      }\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n  useOutsideAlerter(wrapperRef);\n\n  return (<div ref={wrapperRef} style={{position: \"fixed\", bottom: \"20px\", right:\"20px\"}}>\n    <IconButton aria-label=\"open\" isRound icon={isOpen ? FaMinus : FaPlus}  onClick={() => setIsOpen(!isOpen)} />\n    <AnimatePresence>\n      {isOpen &&\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ y: -20, opacity: 1 }}\n          exit={{ y: 20, opacity: 0 }}\n        ><SpeedDialItem /></motion.div>}\n    </AnimatePresence>\n  </div>)\n}\n\nexport default SpeedDial","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    Text, Button, Input, Stack,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useToast, InputRightElement, InputGroup, FormControl, FormErrorMessage, Modal\n} from \"@chakra-ui/core\";\nimport { getFee, sendTransfer } from '../providers/wallets'\n\nimport WalletContext from '../context/walletContext'\n\nconst TransferModal = (props: any) => {\n    const [isOpen, setOpen] = useState(props.props.modal)\n    const { state } = React.useContext(WalletContext)\n    const [amount, setAmount] = useState('')\n    const [fee, setFee] = useState('0')\n    const [to, setToAddress] = useState('')\n    const [next, setNext] = useState(false)\n    const [validAmount, setValid] = useState(true)\n    const toast = useToast()\n\n    useEffect(() => {\n        setOpen(props.props.modal)  \n        updateFee()  \n    },[props])\n\n    const updateFee = () => {\n        getFee(0).then(cost => setFee(cost))\n            .catch(() => toast({\n                title: 'Error',\n                status: 'error',\n                duration: 3000,\n                position: 'bottom-left',\n                description: 'Error getting fee, check your network connection and try again'\n            }))\n    }\n\n    const initiateTransfer = async () => {\n        let transferDeets = {\n            'to': to,\n            'fee': fee,\n            'txnId': '',\n            'amount': amount,\n        }\n        sendTransfer(transferDeets, state.key)\n        setOpen(false)\n    }\n\n    const validateAmount = () => {\n        amount === '' ? \n            setValid(true) : \n            setValid(parseFloat((parseFloat(state.balance) - parseFloat(fee) - parseFloat(amount)).toFixed(12)) >= 0)\n    }\n\n    const setMax = async () => {\n        let balance = parseFloat(state.balance)\n        let amount = balance - parseFloat(fee)       \n        setAmount(amount.toString())\n    }\n\n    return (<Modal closeOnOverlayClick={false} isCentered isOpen={isOpen} onClose={() => {\n        setOpen(false)\n        props.props.closeModal()}}>\n        <ModalOverlay />\n        <ModalContent>\n            <ModalHeader>Send AR</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n                <Stack spacing={2}>\n                    <Stack>\n                        <Text>From:</Text>\n                        <Text fontSize={14}>{state.address}</Text>\n                    </Stack>\n                    {!next && <Fragment>\n                        <Stack spacing={2}>\n                            <FormControl isInvalid={to === state.address}>\n                                <Input w=\"90%\" placeholder=\"Send to Arweave wallet address\"\n                                    value={to}\n                                    onChange={(e: any) => setToAddress(e.target.value)}\n                                    onBlur={updateFee}\n                                    isInvalid={to === state.address} />\n                                <FormErrorMessage>Recipient address cannot be the same as the sending address</FormErrorMessage>\n                            </FormControl>\n                            <Stack isInline>\n                                <FormControl isInvalid={!validAmount}>\n                                    <InputGroup>\n                                        <Input\n                                            placeholder=\"Amount\"\n                                            value={amount}\n                                            onChange={(e: any) => setAmount(e.target.value)}\n                                            onBlur={() => validateAmount()}\n                                            isInvalid={!validAmount}\n                                        />\n                                        <InputRightElement children='AR' />\n                                    </InputGroup>\n                                    <FormErrorMessage>Amount cannot be greater than wallet balance</FormErrorMessage>\n                                </FormControl>\n                                <Button border=\"none\" onClick={setMax}>Use Wallet Balance</Button>\n                            </Stack>\n                            <Text>Fee</Text>\n                            <Text fontSize={14}>{fee} AR</Text>\n                            <Text>Total (including fee)</Text>\n                            <Text fontSize={14}>{(parseFloat(fee) + parseFloat(amount ? amount : '0')).toLocaleString('en-US', { style: 'decimal', minimumFractionDigits: (fee != '0') ? fee.split('.')[1].length : 1 })} AR</Text>\n                        </Stack>\n                    </Fragment>}\n                    {next && <Fragment>\n                        <Stack spacing={2}>\n                            <Stack>\n                                <Text>To:</Text>\n                                <Text fontSize={14}>{to}</Text>\n                            </Stack>\n                            <Stack isInline>\n                                <Stack>\n                                    <Text>Sending</Text>\n                                    <Text>{amount} AR</Text>\n                                </Stack>\n                                <Stack>\n                                    <Text>Fee</Text>\n                                    <Text>{fee} AR</Text>\n                                </Stack>\n                            </Stack>\n                            <Stack>\n                                <Text>Total</Text>\n                                <Text>{(parseFloat(fee) + parseFloat(amount ? amount : '0')).toLocaleString('en-US', { style: 'decimal', minimumFractionDigits: (fee != '0') ? fee.split('.')[1].length : 1 })} AR</Text>\n                            </Stack>\n                            <Stack>\n                                <Text>Balance after transaction</Text>\n                                <Text>{(parseFloat(state.balance) - parseFloat(fee) - parseFloat(amount)).toString()} AR</Text>\n                            </Stack>\n                        </Stack>\n                    </Fragment>}\n                </Stack>\n            </ModalBody>\n            <ModalFooter>\n                {!next ? <Button bg=\"#333\" color=\"white\" w=\"100%\" isDisabled={!validAmount || (to === '')} onClick={() => setNext(true)}>Next</Button> :\n                    <Button bg=\"#333\" color=\"white\" w=\"100%\" onClick={function () {\n                        initiateTransfer();\n                        setOpen(false)\n                        props.props.closeModal();\n                    }}>Confirm and Send AR</Button>}\n            </ModalFooter>\n        </ModalContent>\n    </Modal>\n    )\n}\n\nexport default TransferModal","import React from 'react'\nimport WalletContext, { tokenBalance } from '../context/walletContext'\nimport {\n    Box, Button, Heading, SimpleGrid, Text, Popover, PopoverTrigger, Input, PopoverArrow, PopoverBody, PopoverContent, PopoverCloseButton, PopoverHeader, useToast, FormControl,\n       FormErrorMessage, Spinner, Stack, Divider\n} from '@chakra-ui/core'\nimport TransferModal from './TransactionModal'\nimport { sendTokens, getFee, updateTokens } from '../providers/wallets'\n\nconst AddToken = () => {\n    const { state, dispatch } = React.useContext(WalletContext)\n    const [address, setAddress] = React.useState('')\n    const [loading, setLoading] = React.useState(false)\n    const [valid, setValid] = React.useState(true)\n\n    const update = async () => {\n        setLoading(true)\n        let tokens = [...state.tokens]\n        if (tokens.filter((token) => token.contract === address).length === 0) {\n            tokens.push({ contract: address, balance: 0, ticker: '' })\n            let updatedTokens = await updateTokens(tokens, state.address)\n            console.log(updatedTokens)\n            dispatch({ type: 'UPDATE_TOKENS', payload: { tokens: updatedTokens } })\n            setAddress('')\n        }\n        setLoading(false)\n    }\n\n    const validateToken = () => {\n        if (state.tokens!.filter((token) => token.contract === address).length > 0)\n            setValid(false)\n        else setValid(true)\n    }\n\n    return (\n        <Stack>\n            <Heading size=\"sm\">Add Custom Token</Heading>\n            <FormControl isInvalid={!valid}>\n                <Stack isInline >\n                    <Input placeholder=\"Contract ID\" onChange={(evt: React.ChangeEvent<HTMLInputElement>) => { setAddress(evt.target.value) }}\n                        onBlur={() => validateToken()} />\n                    <Button isDisabled={loading} onClick={() => update()}>Add Token</Button>\n                    {loading && <Spinner />}\n                </Stack>\n                <FormErrorMessage>Token already loaded</FormErrorMessage>\n            </FormControl>\n\n\n        </Stack>\n    )\n}\nconst Tokens = () => {\n    const { state } = React.useContext(WalletContext)\n    const [modal, openModal] = React.useState(false)\n    const [to, setTo] = React.useState('')\n    const [amount, setAmount] = React.useState(0)\n    const closeModal = () => openModal(false)\n    const [fee, setFee] = React.useState('')\n    const [loading, setLoading] = React.useState(false)\n    const toast = useToast();\n\n    React.useEffect(() => {\n        getFee(new Blob([Math.random().toString().slice(-4)]).size).then((fee) => setFee(fee))\n    })\n\n    const initTokenTransfer = async (token: tokenBalance, onClose: any) => {\n        setLoading(true)\n        let message = await sendTokens(token.contract, amount, to, state.key)\n        setLoading(false)\n        onClose()\n        toast({\n            title: `Transaction Status - ${message}`,\n            status: 'info',\n            duration: 3000,\n            position: 'bottom'\n        })\n    }\n    return (<Box>\n        <Heading size=\"sm\">Wallet Balances</Heading>\n        <Text>Address: {state.address}</Text>\n        <SimpleGrid columns={3}>\n            <Text fontWeight=\"bold\">Ticker</Text>\n            <Text fontWeight=\"bold\">Balance</Text>\n        </SimpleGrid>\n        <Divider />\n        <SimpleGrid columns={3}>\n            <Text>AR</Text>\n            <Text>{state.balance}</Text>\n            <Button isDisabled={!state.key} onClick={() => openModal(true)}>Send AR</Button>\n        </SimpleGrid>\n        {state.tokens?.map((token: tokenBalance) => {\n            return (\n                <SimpleGrid columns={3}>\n                    <Text>{token.ticker}</Text>\n                    <Text>{token.balance}</Text>\n                    <Popover closeOnBlur={false}>\n                        {({ onClose }) =>\n                            <>\n                                <PopoverTrigger>\n                                    <Button >Send {token.ticker}</Button>\n                                </PopoverTrigger>\n                                <PopoverContent zIndex={4}>\n                                    <PopoverArrow />\n                                    <PopoverHeader>Send Tokens</PopoverHeader>\n                                    <PopoverCloseButton />\n                                    <PopoverBody>\n                                        <Stack align=\"center\">\n                                            {!loading ?\n                                                <Box>\n                                                    <Input\n                                                        w=\"90%\"\n                                                        placeholder={`Amount`}\n                                                        onChange={(evt: React.ChangeEvent<HTMLInputElement>) => { setAmount(parseFloat(evt.target.value)) }}\n                                                    />\n                                                    <Input\n                                                        w=\"90%\" placeholder={`Address`} onChange={(evt: React.ChangeEvent<HTMLInputElement>) => { setTo(evt.target.value) }} />\n                                                    <Text textAlign=\"center\">Fee: {fee}</Text>\n                                                    <Button isDisabled={!state.key} w=\"90%\" onClick={() => {\n                                                        initTokenTransfer(token, onClose);\n                                                    }}>Submit Transaction</Button>\n                                                </Box>\n                                                :\n                                                <Box>\n                                                    <Spinner />\n                                                    <Text>Submitting Transaction</Text>\n                                                </Box>\n                                            }</Stack>\n                                    </PopoverBody>\n                                </PopoverContent>\n                            </>}\n                    </Popover>\n                </SimpleGrid>\n            )\n        })\n        }\n        <TransferModal props={{ modal, closeModal }} />\n        <Box position=\"fixed\" bottom=\"10%\">\n            <AddToken />\n        </Box>\n    </Box>\n    )\n}\n\nexport default Tokens","import React from 'react';\nimport {\n  theme, Tabs, TabList, TabPanels, Tab, TabPanel, Text, ThemeProvider, Stack, Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton, useDisclosure, Heading\n} from '@chakra-ui/core'\nimport WalletLoader from './components/WalletLoader'\nimport WalletContext, { initWalletState } from './context/walletContext'\nimport walletReducer from './reducers/walletReducer'\nimport Transactions from './components/Transactions';\nimport SpeedDial from './components/SpeedDial'\nimport Tokens from './components/Tokens';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(walletReducer, initWalletState)\n  const [walletModal, openModal] = React.useState(false)\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n\n  const WalletModal = () => {\n    return (<Modal isCentered isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Load Wallet</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <WalletLoader onClose={onClose} />\n        </ModalBody>\n\n        <ModalFooter>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n    )\n  }\n\n  return (\n    <WalletContext.Provider value={{ dispatch, state }}>\n      <ThemeProvider theme={theme}>\n        <Stack w=\"100%\" align=\"center\" >\n            <Heading>ArMob 2.0</Heading>\n          <Tabs isFitted align=\"center\">\n            <TabPanels w=\"90vw\">\n              <TabPanel>\n                {state.address !== '' &&\n                  <Box>\n                    <Tokens />\n                  </Box>}\n              </TabPanel>\n              <TabPanel>\n                <Transactions />\n              </TabPanel>\n            </TabPanels>\n            <TabList position=\"fixed\" bottom=\"0px\" left=\"0px\" w=\"100vw\">\n              <Tab>Wallet</Tab>\n              <Tab>Transactions</Tab>\n            </TabList>\n          </Tabs>\n        </Stack>\n        {/* @ts-ignore 8*/}\n        <SpeedDial onOpen={onOpen} />\n        <WalletModal />\n      </ThemeProvider>\n    </WalletContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
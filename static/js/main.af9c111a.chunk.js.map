{"version":3,"sources":["context/walletContext.ts","components/Camera.tsx","providers/wallets.ts","components/Smartweave.tsx","components/SpeedDial.tsx","../../lib/dist/index.es.js","providers/verto.ts","components/VertoWidget.tsx","components/PSTDrawer.tsx","components/TransactionModal.tsx","components/Tokens.tsx","components/TransactionDrawer.tsx","components/Transactions.tsx","components/WalletLoader.tsx","reducers/walletReducer.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["initWalletState","key","balance","address","tokens","tokenAddresses","wallets","WalletContext","createContext","state","dispatch","CameraWindow","isOpen","close","setTxnOpen","React","useState","dataUri","setDataUri","useContext","closeOnOverlayClick","onClose","align","src","onTakePhotoAnimationDone","console","log","imageType","IMAGE_TYPES","JPG","idealFacingMode","FACING_MODES","ENVIRONMENT","isImageMirror","aria-label","icon","isDisabled","onClick","type","payload","picture","getArweaveInstance","Arweave","init","host","port","getBlockHeight","a","arweave","network","getInfo","res","height","addWallet","wallet","jwkToAddress","ar","getBalance","winstonToAr","getToken","contractID","getContract","token","ticker","contract","contractState","getTxns","undefined","name","value","to","cursor","searchQuery","axios","post","query","then","data","transactions","edges","catch","err","getFee","size","get","sendTransfer","transfer","createTransaction","target","quantity","arToWinston","amount","transaction","addTag","sign","response","sendTokens","interactWriteDryRun","qty","function","interactWrite","txId","toString","uploadFile","tags","arrayBuffer","buffer","forEach","tag","timeLeft","currentBlock","endBlock","Math","floor","getAllCommunityIds","hasNextPage","client","ids","api","i","j","length","push","node","id","pageInfo","getTxnData","contractSrcTxn","filter","getData","decode","string","contractSource","getContractState","contractId","testFunction","method","params","types","param","newParams","parseInt","parseFloat","runFunction","methodType","interactRead","acorn","require","SmartweaveExplorer","setSource","setID","writeMethods","setWriteMethods","readMethods","setReadMethods","setContractState","getSource","parse","ecmaVersion","sourceType","body","declaration","allMethods","test","left","object","methods","getInputMethods","returnStatement","consequent","argument","properties","paramNames","declarations","map","right","placeholder","onChange","evt","w","overflow","readOnly","fontSize","isReadOnly","defaultValue","JSON","stringify","FunctionCall","values","setValue","setType","toast","useToast","txnStatus","setStatus","useDisclosure","onToggle","submitTransaction","title","status","duration","position","allowToggle","index","vals","newTypes","direction","in","SpeedDialItem","label","clickHandler","yPos","isInline","bottom","isRound","SpeedDial","ref","children","setIsOpen","wrapperRef","useRef","items","child","isValidElement","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","style","cloneElement","props","s","e","n","t","Promise","o","d","next","r","throw","done","apply","variables","this","headers","clone","json","c","vault","end","reduce","l","start","f","toFixed","u","recipients","num","find","owner","m","findIndex","isNaN","v","posts","split","txID","rate","timestamp","block","Date","getTime","slice","add","hours","minutes","seconds","unix","subtract","format","every","reverse","rates","dates","g","h","amnt","volume","y","window","localStorage","getItem","sort","exchange","valid","splice","p","owners","x","prices","k","random","Object","keys","b","addr","chain","T","balances","ceil","Exchange","Type","Contract","Input","entries","q","tradeFee","S","getPrice","data_size","C","D","Error","stack","includes","info","protocol","logging","keyfile","exchangeContract","exchangeWallet","blockedTokens","toLowerCase","Token","txs","pst","Rate","I","Chain","tx","fee","ethereum","selectedAddress","request","$","sent","received","diff","humanize","indexOf","getStatus","user","setItem","from","getVerto","Verto","getOpenBuyDeets","verto","getTradingPosts","tPosts","getConfig","config","hasOwnProperty","fetch","publicURL","orders","order","orderA","orderB","totalOrders","total","averageRate","average","individualRates","getOpenSellDeets","createTrade","trade","createOrder","txns","executeTrade","sendOrder","VertoWidget","loading","setLoading","trades","setTrades","purchaseAmount","setAmount","convertedAmount","setConversion","maxBuy","setMax","sellAmount","setSell","sellConvertedAmount","setSellConversion","setTxns","mounted","buy","sell","getTrades","createBuy","calculateAr","handleOrder","createSell","calcSalePrice","toLocaleString","maximumFractionDigits","onBlur","closeOnBlur","disabled","NaN","invalid","PSTBalances","setTotal","open","setOpen","totalBalance","bg","border","borderColor","maxWidth","whiteSpace","textOverflow","PSTVault","PSTDrawer","vaultTime","setVault","logo","setLogo","getVaultTimes","all","blockHeight","message","vaultTimes","url","settings","setting","placement","mb","base","sm","md","lg","xl","variant","mr","TransferModal","modal","setFee","setToAddress","setNext","validAmount","setValid","updateFee","cost","description","initiateTransfer","isCentered","closeModal","spacing","isInvalid","minimumFractionDigits","color","AddToken","setAddress","update","tokenAddress","deets","Tokens","openModal","setTo","tokensLoading","setTokensLoading","currentPST","setPST","tokenList","setList","sortOption","setSort","Blob","fa","toUpperCase","fb","getTokens","set","getTokenDeets","getTokenAddresses","initTokenTransfer","textAlign","columns","my","alignItems","fontWeight","minWidth","pb","borderY","py","justifySelf","zIndex","as","FaCaretRight","Tags","setName","TransactionDrawer","setData","setTags","blob","onDrop","handleClose","handleUpload","startsWith","setTimeout","acceptedFiles","reader","FileReader","onabort","onerror","onload","contents","readAsText","borderStyle","borderWidth","getRootProps","getInputProps","flexDirection","padding","newTags","top","Transactions","setFilter","fTxns","tTxns","Txns","getTransactions","retrieveTransactionsForTag","getTxnsWithCursor","txnsWithCursor","defaultChecked","allowMultiple","txn","recipient","Fragment","Txn","leftIcon","WalletLoader","copiedValue","setCopiedValue","onCopy","useClipboard","walletObject","result","walletDeets","mnemonic","loadWalletFromMnemonic","getKeyFromMnemonic","addAddress","createWalletFile","URL","createObjectURL","href","link","createElement","download","appendChild","click","removeChild","switchWallet","isLoaded","justifyContent","justify","alignContent","walletReducer","action","existingWallets","newWallet","App","useReducer","openCamera","setCamera","loadedState","Provider","theme","isFitted","Smartweave","Camera","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.af9c111a.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport type token = {\n    ticker: string,\n    contract: string,\n    contractState: any\n}\n\nexport type wallet = {\n    address: string,\n    key?: any,\n    mnemonic?: string\n}\nexport type walletState = {\n    key : any,\n    mnemonic?: string\n    balance: string,\n    address: string,\n    tokens: token[],\n    wallets: wallet[],\n    picture?: string,\n    blockHeight?: number,\n    tokenAddresses?: string[]\n}\n\nexport const initWalletState: walletState = {\n        key: null as any,\n        balance: '',\n        address: '',\n        tokens: [],\n        tokenAddresses: [],\n        wallets: []\n}\n\nconst WalletContext = createContext<{state:walletState, dispatch: React.Dispatch<any>}>({state: initWalletState, dispatch: () => null} )\n\nexport { WalletContext as default }","import React from 'react'\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\nimport { Button, IconButton, Image, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Stack } from \"@chakra-ui/core\";\nimport WalletContext from '../context/walletContext'\nimport { IoMdRefreshCircle } from 'react-icons/io'\ninterface CameraProps {\n    isOpen: boolean,\n    close: (modal: string) => void,\n    setTxnOpen: () => void\n}\nconst CameraWindow: React.FC<CameraProps> = ({ isOpen, close, setTxnOpen }) => {\n    const [dataUri, setDataUri] = React.useState('');\n    const { dispatch } = React.useContext(WalletContext)\n    function handleTakePhotoAnimationDone(dataUri: string) {\n        console.log('takePhoto');\n        setDataUri(dataUri);\n    }\n\n    const handleClose = () => {\n        setDataUri('')\n        close('camera')\n    }\n    const handleImageSave = () => {\n        setDataUri('')\n        dispatch({ type: 'SET_PICTURE', payload: { picture: dataUri } })\n        setTxnOpen()\n        close('camera')\n    }\n\n    return (\n        <Modal closeOnOverlayClick={true} isOpen={isOpen} onClose={handleClose} >\n            <ModalOverlay>\n                <ModalContent>\n                    <ModalHeader></ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody>\n                        <Stack align=\"center\">\n                            {(dataUri) ? <Image src={dataUri} />\n                                : <Camera onTakePhotoAnimationDone={handleTakePhotoAnimationDone}\n                                    imageType={IMAGE_TYPES.JPG}\n                                    idealFacingMode={FACING_MODES.ENVIRONMENT}\n                                    isImageMirror={false}\n                                >\n                                    <IconButton aria-label=\"refresh\" icon={<IoMdRefreshCircle />} />\n                                    </Camera>\n                            }\n                            <Button isDisabled={!dataUri} onClick={handleImageSave}>Next</Button>\n                        </Stack>\n                    </ModalBody>\n                </ModalContent>\n            </ModalOverlay>\n        </Modal>\n    );\n}\n\nexport default CameraWindow","import Arweave from 'arweave'\nimport axios from 'axios'\nimport { interactWriteDryRun, interactWrite, interactRead, } from 'smartweave'\nimport { getContract } from 'cacheweave'\n//@ts-ignore\nimport { generateKeyPair } from 'human-crypto-keys'\nimport { token } from '../context/walletContext'\nimport { JWKInterface } from 'arweave/node/lib/wallet'\n\nexport const getArweaveInstance = () => {\n  return Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n  })\n}\n\nexport const getBlockHeight = async (): Promise<number> => {\n  let arweave = await getArweaveInstance()\n  let res = await arweave.network.getInfo()\n  return res.height\n}\n\nexport const addWallet = async (wallet: any): Promise<{ address: string, balance: string }> => {\n  let arweave = getArweaveInstance()\n  let address = ''\n  if (typeof wallet === \"string\") address = wallet;\n  else address = await arweave.wallets.jwkToAddress(wallet)\n  let balance = arweave.ar.winstonToAr(await arweave.wallets.getBalance(address))\n  return { address, balance }\n}\n\nexport const getToken = async (contractID: string) : Promise<token> => {\n  let arweave = getArweaveInstance()\n  let token = await getContract(arweave, contractID)\n  return { ticker: token.ticker, contract: contractID, contractState: token }\n}\n\nexport interface gQLParams {\n  address?: string,\n  name?: string,\n  value?: string,\n  to?: string,\n  cursor?: string\n}\n\nexport const getTxns = async ({ address = undefined, name = undefined, value = undefined, to = undefined, cursor = undefined }: gQLParams): Promise<any> => {\n  let searchQuery = `first: 10 \n    ${address ? 'owners:[\"' + address + '\"]' : ''}\n    ${cursor ? 'after:\"' + cursor + '\"' : ''} \n    ${name ? 'tags:{name:\"' + name + '\",values:[\"' + value + '\"]}' : ''}\n    ${to ? 'recipients:  [\"' + to + '\"]' : ''}`\n  return axios.post('https://arweave.net/graphql', {\n    query: `query {\n                transactions(${searchQuery}\n                 ) {\n                  edges {\n                    cursor\n                    node {\n                      id\n                      recipient\n                      tags {\n                        name\n                        value\n                      }\n                      fee {\n                        winston\n                        ar\n                      }\n                      quantity {\n                        winston\n                        ar\n                      }\n                      owner {\n                        address\n                      }\n                    }\n                  }\n                }\n              }`\n  })\n    .then((res) => {\n      return res.data.data.transactions.edges\n    })\n    .catch((err) => {\n      console.log(err)\n      return []\n    })\n}\n\n\nexport const getFee = async (size: number): Promise<string> => {\n  let res = await axios.get(`https://arweave.net:443/price/${size}`)\n  let arweave = Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n  })\n  return arweave.ar.winstonToAr(res.data)\n}\n\nexport const sendTransfer = async (transfer: any, key: any): Promise<string> => {\n  try {\n    let arweave = Arweave.init({\n      host: 'arweave.net',\n      port: 443,\n    })\n    let transaction = await arweave.createTransaction({\n      target: transfer.to,\n      quantity: arweave.ar.arToWinston(transfer.amount)\n    }, key);\n\n    transaction.addTag('App-Name', 'ArMob 2.0')\n    await arweave.transactions.sign(transaction, key);\n\n    const response = await arweave.transactions.post(transaction);\n    console.log(response);\n  }\n  catch (err) {\n    console.log(`Error sending tranfer - ${err}`)\n    return `Error submitting transaction - ${err}`\n  }\n  return 'Transaction submitted successfully'\n}\n\nexport const sendTokens = async (contract: string, amount: number, target: string, key: any): Promise<string | boolean> => {\n  try {\n    let arweave = getArweaveInstance()\n    let res = await interactWriteDryRun(arweave, key, contract, {\n      target: target,\n      qty: amount,\n      function: 'transfer'\n    })\n    console.log('Dry-run result is:', res)\n    if (res.type === 'ok') {\n      let txId = await interactWrite(arweave, key, contract, {\n        target: target,\n        qty: amount,\n        function: 'transfer'\n      })\n      console.log(res)\n      return txId\n    }\n    return \"success!\"\n  }\n  catch (err) {\n    console.log(err)\n    return (err.toString())\n  }\n}\n\nexport const uploadFile = async (data: File, key: JWKInterface, tags: { name: string; value: string; }[]) => {\n  try {\n    let arweave = getArweaveInstance()\n    let buffer = await data.arrayBuffer()\n    let transaction = await arweave.createTransaction({ data: buffer }, key)\n    tags.forEach((tag) => transaction.addTag(tag.name, tag.value))\n    await arweave.transactions.sign(transaction, key)\n    const response = await arweave.transactions.post(transaction);\n    console.log(response);\n  }\n  catch (err) {\n    console.log(`Error sending tranfer - ${err}`)\n    return `Error submitting transaction - ${err}`\n  }\n  return 'Transaction submitted successfully'\n}\n\nexport const updateTokens = async (tokens: token[], address: string): Promise<token[] | false> => {\n  let arweave = Arweave.init({\n    host: 'arweave.net',\n    port: 443,\n  })\n\n  try {\n    let tokenBalances = await Promise.all(tokens.map((token: token) =>\n      getContract(arweave, token.contract).then(contractState => {\n        console.log(contractState)\n        if (contractState.balances)\n          return { 'ticker': contractState.ticker as string, 'contract': token.contract, contractState: contractState }\n        else return { 'ticker': '', 'contract': token.contract, contractState: contractState }\n      })))\n    return tokenBalances\n  }\n  catch (err) {\n    console.log('Error updating tokens', err)\n    return false\n  }\n}\n\nexport const generate = async (): Promise<string> => {\n  return (await generateKeyPair('rsa', { modulusLength: 4096, format: 'raw-pem' })).mnemonic\n}\n\nexport const timeLeft = (currentBlock: number, endBlock:number): string => {\n  let timeLeft = (endBlock - currentBlock)/720\n  if (timeLeft > 1) return `${Math.floor(timeLeft)} more days`\n  else if (timeLeft > 0.041) return `${Math.floor(timeLeft*24)} more hours`\n  else return 'less than 1 hour'\n}\n\nexport const getAllCommunityIds = async (): Promise<string[]> => {\n  let cursor = '';\n  let hasNextPage = true;\n\n  let client = getArweaveInstance()\n\n  const ids: string[] = [];\n  while (hasNextPage) {\n    const query = {\n          query: `\n              query {\n                  transactions(\n                      tags: [\n                          { name: \"App-Name\", values: [\"SmartWeaveContract\"] }\n                          {\n                              name: \"Contract-Src\"\n                              values: [\"ngMml4jmlxu0umpiQCsHgPX2pb_Yz6YDB8f7G6j-tpI\"]\n                          }\n                      ]\n                      after: \"${cursor}\"\n                      first: 100\n                  ) {\n                      pageInfo {\n                          hasNextPage\n                      }\n                      edges {\n                          cursor\n                          node {\n                              id\n                          }\n                      }\n                  }\n              }            \n          `,\n    };\n    const res = await client.api.post('/graphql', query);\n    const data = res.data;\n\n    for (let i = 0, j = data.data.transactions.edges.length; i < j; i++) {\n          ids.push(data.data.transactions.edges[i].node.id);\n    }\n    hasNextPage = data.data.transactions.pageInfo.hasNextPage;\n\n    if (hasNextPage) {\n          cursor = data.data.transactions.edges[data.data.transactions.edges.length - 1].cursor;\n    }\n  }\n\n  return ids;\n}\n\nexport const getTxnData = async (txId: string): Promise<string> => {\n  let arweave = getArweaveInstance()\n  let query = { query: `\n  query {\n    transactions(ids: [\"${txId}\"]) {\n        edges {\n            node {\n                id\n              \ttags {\n                  name\n                  value\n                }\n            }\n        }\n    }\n}`}\n  let res = await arweave.api.post('/graphql', query)\n  console.log(res)\n  let contractSrcTxn = res.data.data.transactions.edges[0].node.tags.filter((tag:any) => tag.name === 'Contract-Src')[0].value\n  console.log(contractSrcTxn)\n  let contractSource = await arweave.transactions.getData(contractSrcTxn, {decode: true, string: true}) as string\n  return contractSource;\n}\n\nexport const getContractState = async (contractId: string) : Promise<any> => {\n  let arweave = getArweaveInstance()\n  return await getContract(arweave, contractId)\n}\n\nexport const testFunction = async (method: string, contractId: string, params: any, key: JWKInterface, types: any) : Promise<string> => {\n  let arweave = getArweaveInstance()\n  console.log('params are')\n  console.log(params)\n  console.log('types are')\n  console.log(types)\n  let newParams = {...params}\n  for (let param in newParams) {\n    if (types[param] === \"integer\") {\n      newParams[param] = parseInt(params[param])\n    }\n    else if (types[param] === \"float\") {\n      newParams[param] = parseFloat(params[param])\n    }\n  }\n  let res = await interactWriteDryRun(arweave, key, contractId, {\n    ...newParams,\n    function: method\n  })\n  console.log(res)\n  return res.type\n}\n\nexport const runFunction = async (method: string, contractId: string, params: any, key: JWKInterface, types: any, methodType: string) : Promise<any> => {\n  let arweave = getArweaveInstance()\n  console.log('params are')\n  console.log(params)\n  console.log('types are')\n  console.log(types)\n  let newParams = {...params}\n  for (let param in newParams) {\n    if (types[param] === \"integer\") {\n      newParams[param] = parseInt(params[param])\n    }\n    else if (types[param] === \"float\") {\n      newParams[param] = parseFloat(params[param])\n    }\n  }\n  let res: string | false\n  if (methodType === 'write') {\n     res = await interactWrite(arweave, key, contractId, {\n    ...newParams,\n    function: method\n  })}\n  else res = (await interactRead(arweave, key, contractId, {\n    ...newParams,\n    function: method\n  }))\n  console.log(res)\n  return res\n}\n\n","import { Accordion, AccordionButton, AccordionIcon, AccordionItem, AccordionPanel, Box, Button, Code, Collapse, Heading, HStack, Input, List, ListItem, Radio, RadioGroup, Spinner, Text, Textarea, useDisclosure, useToast, VStack } from '@chakra-ui/core';\nimport React from 'react';\nimport WalletContext from '../context/walletContext';\nimport { getContractState, getTxnData, runFunction, testFunction } from '../providers/wallets';\nconst acorn = require(\"acorn\")\nconst walk = require(\"acorn-walk\")\ninterface FunctionCallProps {\n    name: string,\n    params: string[],\n    methodType: string,\n    contractId: string\n}\n\nconst SmartweaveExplorer = () => {\n    const [contractSource, setSource] = React.useState('')\n    const [contractId, setID] = React.useState('')\n    const [writeMethods, setWriteMethods] = React.useState([] as FunctionCallProps[])\n    const [readMethods, setReadMethods] = React.useState([] as FunctionCallProps[])\n    const [contractState, setContractState] = React.useState({} as any)\n\n\n    const getSource = async () => {\n        let res = await getTxnData(contractId)\n        setSource(res)\n        if (res) {\n            setSource(res)\n            let src = await acorn.parse(res, { ecmaVersion: \"latest\", sourceType: \"module\" })\n            if (src.body[0].declaration.id.name === 'handle') {\n                let allMethods = src.body[0].declaration.body.body.filter((node: any) => node.type === \"IfStatement\" && node.test.left.object.name === \"input\")\n                let methods = getInputMethods(allMethods)\n                setWriteMethods(methods.writeMethods.filter((method) => method.name))\n                setReadMethods(methods.readMethods.filter((method) => method.name))\n                console.log(methods)\n            }\n            res = await getContractState(contractId)\n            console.log(res)\n            setContractState(res)\n        }\n\n    }\n\n    const getInputMethods = (src: any[]): { readMethods: FunctionCallProps[], writeMethods: FunctionCallProps[] } => {\n        let readMethods: FunctionCallProps[] = []\n        let writeMethods: FunctionCallProps[] = []\n        src.forEach((node) => {\n            if (node.test.type === \"BinaryExpression\" && node.test.left.object && node.test.left.object.name === \"input\") {\n                try {\n                    let returnStatement = node.consequent.body[node.consequent.body.length - 1]     //Get write methods\n                    if (returnStatement.type === 'ReturnStatement' && returnStatement.argument.properties[0].key.name === 'state') {\n                        let params = node.consequent.body.filter((param: any) => param.type == \"VariableDeclaration\" && param.declarations[0].init.object && param.declarations[0].init.object.name === \"input\")\n                        let paramNames = params.map((param: any) => param.declarations[0].id.name)\n                        let name = node.test.right.value\n                        writeMethods.push({\n                            name: name,\n                            params: paramNames,\n                            methodType: 'write',\n                            contractId: contractId\n                        })\n                    }\n                    else {\n                        console.log('found read method')\n                      //Get read methods\n                        let params = node.consequent.body.filter((param: any) => param.type === \"VariableDeclaration\" && (\n                            (param.declarations[0].init.left && param.declarations[0].init.left.object && param.declarations[0].init.left.object.name === \"input\") ||\n                            (param.declarations[0].init.object && param.declarations[0].init.object.name === \"input\")))\n                        let paramNames = params.map((param: any) => param.declarations[0].id.name)\n                        let name = node.test.right.value\n                        readMethods.push({\n                            name: name,\n                            params: paramNames,\n                            methodType: 'read',\n                            contractId: contractId\n                        })\n                    }\n                }\n                catch (err) { console.log(err) }\n            }\n        }\n        );\n        return { readMethods, writeMethods };\n    }\n\n    return (<VStack>\n        <Input placeholder=\"Smartweave Contract ID\" value={contractId} onChange={(evt) => setID(evt.target.value)} />\n        <Button onClick={getSource}>Load Contract</Button>\n        <Heading size=\"xs\">Contract Source</Heading>\n        <Code w=\"100%\">\n            <Textarea overflow=\"scroll\" height=\"200px\" readOnly={true} fontSize='xs' isReadOnly defaultValue={contractSource} />\n        </Code>\n        <Heading size=\"xs\">Contract State</Heading>\n        <Code w=\"100%\" overflow=\"scroll\" height=\"200px\" fontSize='xs' align=\"start\">\n          {JSON.stringify(contractState, null, 2)}\n        </Code>\n        <Heading size=\"xs\">Write Methods</Heading>\n        <List>\n            {writeMethods && writeMethods.map((method: FunctionCallProps) => <ListItem>\n                <FunctionCall name={method.name} params={method.params} methodType={method.methodType} contractId={contractId} />\n            </ListItem>)}\n        </List>\n        <Heading size=\"xs\">Read Methods</Heading>\n        <List>\n            {readMethods && readMethods.map((method: FunctionCallProps) => <ListItem>\n                <FunctionCall name={method.name} params={method.params} methodType={method.methodType} contractId={contractId} />\n            </ListItem>)}\n        </List>\n    </VStack>\n    )\n}\n\nexport default SmartweaveExplorer\n\nconst FunctionCall: React.FC<FunctionCallProps> = ({ name, params, methodType, contractId }) => {\n    const [values, setValue] = React.useState({} as any)\n    const [types, setType] = React.useState({} as any)\n    const { state } = React.useContext(WalletContext)\n    const toast = useToast();\n    const [txnStatus, setStatus] = React.useState() as any\n    const { isOpen, onToggle } = useDisclosure()\n\n    const submitTransaction = async (close: () => void) => {\n        let res = await runFunction(name, contractId, values, state.key, types, methodType)\n        if (res)\n            toast({\n                title: 'Successfully submitted transaction!',\n                status: 'success',\n                duration: 3000,\n                position: 'bottom',\n            })\n        else toast({\n            title: 'Error submitting transaction',\n            status: 'error',\n            duration: 3000,\n            position: 'bottom',\n        })\n        close()\n        setStatus()\n    }\n\n    return (\n        <Accordion allowToggle>\n            <AccordionItem key={name}>\n                <AccordionButton>\n                    <Text>{name}</Text>\n                    <AccordionIcon />\n                </AccordionButton>\n                <AccordionPanel>\n                    {params.map((param, index) => {\n                        return <Box><Input key={name + param} placeholder={param} value={values[index]} onChange={(evt) => {\n                            let vals = { ...values }\n                            vals[param] = evt.target.value\n                            setValue(vals)\n                        }\n                        } />\n                            <RadioGroup name=\"param-type\" onChange={(evt) => {\n                                let newTypes = { ...types }\n                                newTypes[param] = evt.toString()\n                                setType(newTypes)\n                            }}\n                                value={types[param]}\n                                direction=\"horizontal\" >\n                                <Radio value=\"string\">String</Radio>\n                                <Radio value=\"integer\">Integer</Radio>\n                                <Radio value=\"float\">Float</Radio>\n                            </RadioGroup>\n                        </Box>\n                    })}\n                    {methodType === 'write' ? <>\n                        {!isOpen && !txnStatus && <Button onClick={() => {\n                            onToggle();\n                            testFunction(name, contractId, values, state.key, types)\n                                .then(res => setStatus(res))\n                        }}\n                        >Test Contract Method Call</Button>}\n                    </>\n                        :\n                        <>\n                            {!isOpen ? <Button onClick={() => {\n                                onToggle();\n                                runFunction(name, contractId, values, state.key, types, methodType)\n                                    .then(res => setStatus(res))\n                            }}>Read Contract</Button> :\n                                <Button onClick={() => {\n                                    onToggle();\n                                    setStatus();\n                                }}>Start Over</Button>}\n                        </>\n                    }\n                    <Collapse in={isOpen}>\n                        {methodType === 'write' ? <VStack>\n                            {txnStatus ? <Text>Transaction status is {txnStatus}</Text> : <Spinner />}\n                            <HStack>\n                                <Button onClick={() => submitTransaction(onToggle)}>Live dangerously!</Button>\n                                <Button onClick={() => {\n                                    onToggle();\n                                    setStatus();\n                                }}>Start Over</Button>\n                            </HStack>\n                            </VStack>\n                            : <Code>\n                                <Text>Method Result</Text>\n                                {txnStatus ? <Textarea isReadOnly overflow=\"scroll\" height=\"200px\" readOnly={true} fontSize='xs' defaultValue={JSON.stringify(txnStatus, null, 2)} /> : <Spinner />}\n                            </Code>\n                        }\n                    </Collapse>\n                </AccordionPanel>\n            </AccordionItem>\n        </Accordion>\n    )\n}\n","import React from 'react';\nimport { FaPlus, FaMinus} from 'react-icons/fa'\nimport { Stack, IconButton, Text } from '@chakra-ui/core'\n\ninterface SpeedDialItemProps {\n  icon: any, //Must pass an iconType object\n  label: string\n  clickHandler: () => void,\n  yPos?: string\n}\n\nexport const SpeedDialItem: React.FC<SpeedDialItemProps> = ({ icon, label, clickHandler, yPos }: SpeedDialItemProps) => {\n  return (\n    <Stack isInline\n      position=\"fixed\"\n      bottom={yPos}\n      right=\"20px\"\n      align=\"center\">\n      <Text fontSize={11}>{label}</Text>\n      <IconButton aria-label=\"wallet\" icon={icon} isRound onClick={async () => clickHandler()} />\n    </Stack>\n  )\n}\n\nexport const SpeedDial: React.FC = ({ children }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const wrapperRef = React.useRef(null);\n  //@ts-ignore\n  const items = children && children.filter((child: any) => React.isValidElement(child))\n  var yPos = 100\n  const useOutsideAlerter = (ref: any) => {\n    React.useEffect(() => {\n      function handleClickOutside(event: MouseEvent) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setIsOpen(false)\n        }\n      }\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n  useOutsideAlerter(wrapperRef);\n  //@ts-ignore\n  return (<div ref={wrapperRef} style={{ position: \"fixed\", bottom: \"50px\", right: \"20px\" }}>\n    <IconButton aria-label=\"open\" isRound icon={isOpen ? <FaMinus /> : <FaPlus />} onClick={(evt: React.MouseEvent) => setIsOpen(!isOpen) } />\n    {/* @ts-ignore */}\n    {isOpen && items!.map((child, index) => {\n      if (React.isValidElement(child)) {\n        //@ts-ignore\n        return React.cloneElement(child, {...child.props,yPos: (yPos + 50*(index)).toString()+'px'})\n      }} )}\n  </div>)\n}\n\n/*  Once Framer Motion tells me what's wrong with Safari\n  return (<div ref={wrapperRef} style={{position: \"fixed\", bottom: \"50px\", right:\"20px\"}}>\n   <IconButton aria-label=\"open\" isRound icon={isOpen ? <FaMinus />: <FaPlus />}  onClick={(evt: React.MouseEvent) => {console.log(evt);setIsOpen(!isOpen)}} />\n    <AnimatePresence>\n      {isOpen &&\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ y: -20, opacity: 1 }}\n          exit={{ y: 20, opacity: 0 }}\n        ><SpeedDialItem key=\"1234\" /></motion.div>}\n    </AnimatePresence>\n  </div>)\n  */","import e from\"node-fetch\";import{getContract as n,getData as t}from\"cacheweave\";import a from\"moment\";import i from\"arweave\";function s(e,n,t,a){return new(t||(t=Promise))((function(i,s){function o(e){try{d(a.next(e))}catch(e){s(e)}}function r(e){try{d(a.throw(e))}catch(e){s(e)}}function d(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(o,r)}d((a=a.apply(e,n||[])).next())}))}function o({query:n,variables:t}){return s(this,void 0,void 0,(function*(){const a=JSON.stringify({query:n,variables:t});return yield function(n){return s(this,void 0,void 0,(function*(){const t={method:\"POST\",headers:{\"content-type\":\"application/json\"},body:n},a=yield e(\"https://arweave.net/graphql\",t);return yield a.clone().json()}))}(a)}))}var r='query($owners: [String!], $recipients: [String!], $num: Int) {\\n  transactions(\\n    owners: $owners\\n    recipients: $recipients\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: \"Genesis\" }\\n    ]\\n    first: $num\\n  ) {\\n    edges {\\n      node {\\n        id\\n        owner {\\n          address\\n        }\\n      }\\n    }\\n  }\\n}\\n';const d=2147483647,c=(e,t,a)=>s(void 0,void 0,void 0,(function*(){const i=(yield n(e,a)).vault;let s=0;if(t in i){const n=(yield e.network.getInfo()).height;s+=i[t].filter((e=>n<e.end)).map((e=>e.balance)).reduce(((e,n)=>e+n),0)}return s})),l=(e,t,a)=>s(void 0,void 0,void 0,(function*(){const i=1*(yield c(e,t,a))/2,o=1*(yield((e,t,a)=>s(void 0,void 0,void 0,(function*(){const i=(yield n(e,a)).vault;if(t in i){const n=(yield e.network.getInfo()).height;for(const e of i[t])if(n<e.end)return e.end-e.start}return 0})))(e,t,a))/3,r=1*(yield((e,n)=>s(void 0,void 0,void 0,(function*(){return parseFloat(e.ar.winstonToAr(yield e.wallets.getBalance(n)))})))(e,t))/6;return parseFloat((i+o+r).toFixed(3))})),u=(e,n,t)=>s(void 0,void 0,void 0,(function*(){const a=(yield o({query:r,variables:{recipients:[t],num:d}})).data.transactions.edges,i=[],s=[];for(const t of a)if(!s.find((e=>e===t.node.owner.address))){(yield c(e,t.node.owner.address,n))>0&&i.push(t.node.owner.address),s.push(t.node.owner.address)}return i})),m=e=>{const n=e.findIndex((e=>isNaN(e)));if(-1===n)return e;let t=n;for(;t<e.length&&isNaN(e[t]);)t++;for(let a=n;a<t;a++)e[a]=0===n?e[t]:e[n-1];return m(e)},v=(e,n,t,i)=>s(void 0,void 0,void 0,(function*(){const s=yield u(e,t,i),r=(yield o({query:'\\n        query($posts: [String!], $num: Int) {\\n          transactions(\\n            owners: $posts\\n            tags: [\\n              { name: \"Exchange\", values: \"Verto\" }\\n              { name: \"Type\", values: \"Confirmation\" }\\n            ]\\n            first: $num\\n          ) {\\n            edges {\\n              node {\\n                id\\n                block {\\n                  timestamp\\n                }\\n                tags {\\n                  name\\n                  value\\n                }\\n              }\\n            }\\n          }\\n        }      \\n      ',variables:{posts:s,num:d}})).data.transactions.edges,c=[];for(const e of r){const t=e.node,a=t.tags.find((e=>\"Received\"===e.name));if(a&&a.value.split(\" \")[1]===n){const e=t.tags.find((e=>\"Swap\"===e.name));if(e){const n=(yield o({query:\"\\n                query($txID: ID!) {\\n                  transaction(id: $txID) {\\n                    tags {\\n                      name\\n                      value\\n                    }\\n                  }\\n                }          \\n              \",variables:{txID:e.value}})).data.transaction.tags.find((e=>\"Rate\"===e.name));n&&c.push({id:t.id,rate:parseFloat(n.value),timestamp:t.block?t.block.timestamp:parseInt((new Date).getTime().toString().slice(0,-3))})}}}let l=[];const v=[];if(c.length>0){let e=a().add(1,\"days\").hours(0).minutes(0).seconds(0);const n=c[c.length-1].timestamp;for(;e.unix()>=n;){const n=[],t=e.clone().subtract(1,\"days\");for(const a of c)a.timestamp<=e.unix()&&a.timestamp>=t.unix()&&n.push(a.rate);l.push(n.reduce(((e,n)=>e+n),0)/n.length),v.push(t.format(\"MM.DD\")),e=t}l.every((e=>isNaN(e)))||(l=m(l.reverse()))}return{rates:l,dates:v.reverse()}}));var g='query($recipients: [String!], $token: [String!]!, $num: Int) {\\n  transactions(\\n    recipients: $recipients\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: \"Sell\" }\\n      { name: \"Contract\", values: $token }\\n    ]\\n    first: $num\\n  ) {\\n    edges {\\n      node {\\n        block {\\n          timestamp\\n        }\\n        tags {\\n          name\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n';const h=(e,n,t,i)=>s(void 0,void 0,void 0,(function*(){const s=yield u(e,t,i),r=(yield o({query:g,variables:{recipients:s,token:n,num:d}})).data.transactions.edges,c=[];r.map((({node:e})=>{const n=e.tags.find((e=>\"Input\"===e.name));n&&c.push({amnt:JSON.parse(n.value).qty,timestamp:e.block.timestamp})}));const l=[],m=[];if(c.length>0){let e=a().add(1,\"days\").hours(0).minutes(0).seconds(0);for(;e.unix()>=c[c.length-1].timestamp;){const n=e.clone().subtract(1,\"days\"),t=c.filter((t=>t.timestamp<=e.unix()&&t.timestamp>=n.unix())).map((e=>e.amnt)).reduce(((e,n)=>e+n),0);l.push(t),m.push(n.format(\"MMM DD\")),e=n}}return{volume:l.reverse(),dates:m.reverse()}}));const y=(e,t,a)=>s(void 0,void 0,void 0,(function*(){const i=[t];if(\"undefined\"!=typeof window){JSON.parse(localStorage.getItem(\"tokens\")||\"[]\").map((e=>i.push(e)))}const s=[];for(const o of i)try{const i=yield n(e,o),r=yield h(e,o,t,a);s.push({id:o,name:i.name,ticker:i.ticker,volume:r.volume.reduce(((e,n)=>e+n),0)})}catch(e){}s.sort(((e,n)=>n.volume-e.volume));const o=[];return s.map((e=>o.push({id:e.id,name:e.name,ticker:e.ticker}))),o})),f=(e,n)=>s(void 0,void 0,void 0,(function*(){const a=(yield o({query:'query($exchange: String!) {\\n  transactions(\\n    recipients: [$exchange]\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: \"Token\" }\\n    ]\\n    first: 2147483647\\n  ) {\\n    edges {\\n      node {\\n        tags {\\n          name\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n',variables:{exchange:n}})).data.transactions.edges,i=[];a.map((({node:e})=>{const n=e.tags.find((e=>\"Contract\"===e.name));if(n){const e=n.value;i.find((n=>n.id===e))||i.push({id:e,name:\"\",ticker:\"\",amnt:0,valid:!0})}}));for(let a=0;a<i.length;a++)try{const s=yield t(e,i[a].id),r=JSON.parse(s);i[a].name=r.name,i[a].ticker=r.ticker;let d=(yield o({query:'\\n            query($exchange: String!, $contract: [String!]!) {\\n              transactions(\\n                recipients: [$exchange]\\n                tags: [\\n                  { name: \"Exchange\", values: \"Verto\" }\\n                  { name: \"Type\", values: \"Token\" }\\n                  { name: \"Contract\", values: $contract }\\n                ]\\n                first: 2147483647\\n              ) {\\n                edges {\\n                  node {\\n                    owner {\\n                      address\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          ',variables:{exchange:n,contract:i[a].id}})).data.transactions.edges;const c={};d=d.filter((({node:e})=>!(e.owner.address in c)&&(c[e.owner.address]=!0))),i[a].amnt=d.length}catch(e){i[a].valid=!1}i.sort(((e,n)=>n.amnt-e.amnt));const s=[];return i.map((e=>{e.valid&&s.push({id:e.id,name:e.name,ticker:e.ticker})})),s.splice(0,10)}));const p=(e,n,t)=>s(void 0,void 0,void 0,(function*(){var a;const i=null===(a=(yield o({query:r,variables:{owners:[n],recipients:[t],num:1}})).data.transactions.edges[0])||void 0===a?void 0:a.node.id;if(!i)return\"invalid\";return JSON.parse((yield e.transactions.getData(i,{decode:!0,string:!0})).toString())})),x=e=>{const n=e.findIndex((e=>isNaN(e)));if(-1===n)return e;let t=n;for(;t<e.length&&isNaN(e[t]);)t++;for(let a=n;a<t;a++)e[a]=0===n?e[t]:e[n-1];return x(e)},w=(e,n,t,i)=>s(void 0,void 0,void 0,(function*(){const s=yield u(e,t,i),r=(yield o({query:'\\n        query($posts: [String!], $num: Int) {\\n          transactions(\\n            owners: $posts\\n            tags: [\\n              { name: \"Exchange\", values: \"Verto\" }\\n              { name: \"Type\", values: \"Confirmation\" }\\n            ]\\n            first: $num\\n          ) {\\n            edges {\\n              node {\\n                id\\n                block {\\n                  timestamp\\n                }\\n                tags {\\n                  name\\n                  value\\n                }\\n              }\\n            }\\n          }\\n        }      \\n      ',variables:{posts:s,num:d}})).data.transactions.edges,c=[];for(const e of r){const t=e.node,a=t.tags.find((e=>\"Received\"===e.name));if(a&&\"AR\"===a.value.split(\" \")[1]){const e=t.tags.find((e=>\"Match\"===e.name));if(e){const a=(yield o({query:\"\\n                query($txID: ID!) {\\n                  transaction(id: $txID) {\\n                    tags {\\n                      name\\n                      value\\n                    }\\n                  }\\n                }          \\n              \",variables:{txID:e.value}})).data.transaction,i=a.tags.find((e=>\"Contract\"===e.name));if(i&&i.value===n){const e=a.tags.find((e=>\"Rate\"===e.name));e&&c.push({rate:1/parseFloat(e.value),timestamp:t.block?t.block.timestamp:parseInt((new Date).getTime().toString().slice(0,-3))})}}}}let l=[];const m=[];if(c.length>0){let e=a().add(1,\"days\").hours(0).minutes(0).seconds(0);for(;e.unix()>=c[c.length-1].timestamp;){const n=e.clone().subtract(1,\"days\"),t=c.filter((t=>t.timestamp<=e.unix()&&t.timestamp>=n.unix())).map((e=>e.rate));l.push(t.reduce(((e,n)=>e+n),0)/t.length),m.push(n.format(\"MMM DD\")),e=n}l.every((e=>isNaN(e)))||(l=x(l.reverse()))}return{prices:l,dates:m.reverse()}})),k=e=>{let n=0;const t=Math.random();for(const a of Object.keys(e))if(n+=e[a],t<=n&&e[a]>0)return a};const b=(e,n)=>s(void 0,void 0,void 0,(function*(){const t=(yield o({query:'\\n        query($addr: String!, $chain: [String!]!) {\\n          transactions(\\n            owners: [$addr]\\n            tags: [\\n              { name: \"Application\", values: \"ArLink\" }\\n              { name: \"Chain\", values: $chain }\\n            ]\\n            first: 1\\n          ) {\\n            edges {\\n              node {\\n                tags {\\n                  name\\n                  value\\n                }\\n              }\\n            }\\n          }\\n        }\\n      ',variables:{addr:e,chain:n}})).data.transactions.edges;if(1===t.length){const e=t[0].node.tags.find((e=>\"Wallet\"===e.name));if(e)return e.value}return\"invalid\"})),T=(e,t,a,i,o)=>s(void 0,void 0,void 0,(function*(){const r=yield((e,t)=>s(void 0,void 0,void 0,(function*(){const a=yield n(e,t),i=a.balances,s=a.vault;let o=0;for(const e of Object.keys(i))o+=i[e];for(const e of Object.keys(s)){if(!s[e].length)continue;const n=s[e].map((e=>e.balance)).reduce(((e,n)=>e+n),0);o+=n,e in i?i[e]+=n:i[e]=n}const r={};for(const e of Object.keys(i))r[e]=i[e]/o;return k(r)})))(e,o),d=Math.ceil(.005*Math.ceil(a)),c={Exchange:\"Verto\",Type:\"Fee-VRT-Holder\",\"App-Name\":\"SmartWeaveAction\",\"App-Version\":\"0.3.0\",Contract:i,Input:JSON.stringify({function:\"transfer\",target:r,qty:d})},l=yield e.createTransaction({target:r,data:Math.random().toString().slice(-4)},t);for(const[e,n]of Object.entries(c))l.addTag(e,n);return l})),q=(e,n,t)=>s(void 0,void 0,void 0,(function*(){var a;const i=null===(a=(yield o({query:r,variables:{owners:[n],recipients:[t]}})).data.transactions.edges[0])||void 0===a?void 0:a.node.id;return JSON.parse((yield e.transactions.getData(i,{decode:!0,string:!0})).toString()).tradeFee})),S=(e,n)=>s(void 0,void 0,void 0,(function*(){const t=yield e.transactions.getPrice(parseFloat(n.data_size),n.target);return parseFloat(e.ar.winstonToAr(t))})),$=(e,n,t,a,i,r,d,c,l)=>s(void 0,void 0,void 0,(function*(){const u=yield e.wallets.jwkToAddress(n),m=parseFloat(e.ar.winstonToAr(yield e.wallets.getBalance(u)));if(d){if(!(yield b(u,t)))return\"arLink\";if(!l)return\"invalid\";const o={Exchange:\"Verto\",Type:\"Swap\",Chain:t,Rate:l},r=yield e.createTransaction({target:a,quantity:e.ar.arToWinston(d.toString())},n);for(const[e,n]of Object.entries(o))r.addTag(e,n.toString());const{tx:c,fee:v}=yield((e,n,t,a,i)=>s(void 0,void 0,void 0,(function*(){const s=t*(yield q(e,a,i)),o={Exchange:\"Verto\",Type:\"Fee-Trading-Post\"},r=yield e.createTransaction({target:a,quantity:e.ar.arToWinston(s.toString())},n);for(const[e,n]of Object.entries(o))r.addTag(e,n);return{tx:r,fee:s}})))(e,n,d,a,i),g=(yield S(e,r))+(yield S(e,c));return m>=g+d+v?{txs:[c,r],ar:g+d+v,chain:0}:\"ar\"}if(c){if(!(yield((e,n)=>s(void 0,void 0,void 0,(function*(){const t=(yield o({query:'\\n        query($addr: [String!]!, $chain: [String!]!) {\\n          transactions(\\n            tags: [\\n              { name: \"Application\", values: \"ArLink\" }\\n              { name: \"Chain\", values: $chain }\\n              { name: \"Wallet\", values: $addr }\\n            ]\\n            first: 1\\n          ) {\\n            edges {\\n              node {\\n                owner {\\n                  address\\n                }\\n              }\\n            }\\n          }\\n        }\\n      ',variables:{addr:e,chain:n}})).data.transactions.edges;return 1===t.length?t[0].node.owner.address:\"invalid\"})))(window.ethereum.selectedAddress,t)))return\"arLink\";const n=(yield p(e,a,i)).chain;let d=.005*c;c<1e-6?(c=1e-6,d=1e-6):d<1e-6&&(d=1e-6);const l=c+d;let u=yield window.ethereum.request({method:\"eth_getBalance\",params:[window.ethereum.selectedAddress,\"latest\"]});return u=parseInt(u,16)/1e18,u>=l?{txs:[{chain:t,type:\"FEE\",to:yield C(e,r,t,i),value:d},{chain:t,to:n[t],value:c}],ar:0,chain:l}:\"chain\"}return\"invalid\"})),C=(e,t,a,i)=>s(void 0,void 0,void 0,(function*(){const s=yield n(e,t),o=s.balances,r=s.vault;for(const e of Object.keys(o)){\"invalid\"===(yield b(e,a))&&(delete o[e],delete r[e])}let d=0;for(const e of Object.keys(o))d+=o[e];for(const e of Object.keys(r)){if(!r[e].length)continue;const n=r[e].map((e=>e.balance)).reduce(((e,n)=>e+n),0);d+=n,e in o?o[e]+=n:o[e]=n}const c={};for(const e of Object.keys(o))c[e]=o[e]/d;return yield b(k(c)||i,a)})),I=(e,t,a,i,o,r,d,c,l)=>s(void 0,void 0,void 0,(function*(){const u=yield p(e,r,c);if(o in u.blockedTokens)return\"token\";const m=yield e.wallets.jwkToAddress(t),v=parseFloat(e.ar.winstonToAr(yield e.wallets.getBalance(m))),g=(yield n(e,o)).balances[m];if(\"buy\"===a.toLowerCase()){const n={Exchange:\"Verto\",Type:\"Buy\",Token:o},a=yield e.createTransaction({target:r,quantity:e.ar.arToWinston(i.toString())},t);for(const[e,t]of Object.entries(n))a.addTag(e,t);const d=yield((e,n,t,a)=>s(void 0,void 0,void 0,(function*(){const i={Exchange:\"Verto\",Type:\"Fee-Exchange\"},s=.005*t,o=yield e.createTransaction({target:a,quantity:e.ar.arToWinston(s.toString())},n);for(const[e,n]of Object.entries(i))o.addTag(e,n);return o})))(e,t,i,c),l=(yield S(e,a))+(yield S(e,d))+i+.005*i;return v>=l?{txs:[a,d],ar:l,pst:0}:\"ar\"}if(\"sell\"===a.toLowerCase()&&l){const n={Exchange:\"Verto\",Type:\"Sell\",\"App-Name\":\"SmartWeaveAction\",\"App-Version\":\"0.3.0\",Contract:o,Rate:1/l,Input:JSON.stringify({function:\"transfer\",target:r,qty:Math.ceil(i)})},a=yield e.createTransaction({target:r,data:Math.random().toString().slice(-4)},t);for(const[e,t]of Object.entries(n))a.addTag(e,t.toString());const u=yield((e,n,t,a,i,o)=>s(void 0,void 0,void 0,(function*(){const s=Math.ceil(Math.ceil(t)*(yield q(e,i,o))),r={Exchange:\"Verto\",Type:\"Fee-Trading-Post\",\"App-Name\":\"SmartWeaveAction\",\"App-Version\":\"0.3.0\",Contract:a,Input:JSON.stringify({function:\"transfer\",target:i,qty:s})},d=yield e.createTransaction({target:i,data:Math.random().toString().slice(-4)},n);for(const[e,n]of Object.entries(r))d.addTag(e,n);return d})))(e,t,i,o,r,c),m=yield T(e,t,i,o,d),h=(yield S(e,a))+((yield S(e,u))+(yield S(e,m))),y=Math.ceil(i)+Math.ceil(Math.ceil(i)*(yield q(e,r,c)))+Math.ceil(.005*Math.ceil(i));return v>=h?g&&g>=y?{txs:[a,u,m],ar:h,pst:y}:\"pst\":\"ar\"}return\"invalid\"}));var D=\"query($recipients: [String!], $owners: [String!], $block: Int) {\\n  transactions(\\n    recipients: $recipients\\n    owners: $owners\\n    block: { max: $block }\\n  ) {\\n    edges {\\n      node {\\n        id\\n        block {\\n          timestamp\\n        }\\n        quantity {\\n          ar\\n        }\\n      }\\n    }\\n  }\\n}\\n\";console.log=e=>{var n;(null===(n=(new Error).stack)||void 0===n?void 0:n.includes(\"smartweave\"))||console.info(e)};export default class{constructor(e,n,t){this.arweave=n||new i({host:\"arweave.net\",port:443,protocol:\"https\",logging:!1}),this.keyfile=e,this.exchangeContract=(null==t?void 0:t.exchangeContract)||\"usjm4PCxUd5mtaon7zc97-dt-3qf67yPyqgzLnLqk5A\",this.exchangeWallet=(null==t?void 0:t.exchangeWallet)||\"aLemOhg9OGovn-0o4cOCbueiHT9VgdYnpJpq7NgMA1A\"}arVolume(){return((e,n,t)=>s(void 0,void 0,void 0,(function*(){const i=yield u(e,n,t),s=(yield o({query:'\\n        query($recipients: [String!], $num: Int) {\\n          transactions(\\n            recipients: $recipients\\n            tags: [\\n              { name: \"Exchange\", values: \"Verto\" }\\n              { name: \"Type\", values: \"Buy\" }\\n            ]\\n            first: $num\\n          ) {\\n            edges {\\n              node {\\n                quantity {\\n                  ar\\n                }\\n                block {\\n                  timestamp\\n                }\\n              }\\n            }\\n          }\\n        }      \\n      ',variables:{recipients:i,num:d}})).data.transactions.edges,r=[];s.map((({node:e})=>{r.push({amnt:parseFloat(e.quantity.ar),timestamp:e.block.timestamp})}));const c=[],l=[];if(r.length>0){let e=a().add(1,\"days\").hours(0).minutes(0).seconds(0);for(;e.unix()>=r[r.length-1].timestamp;){const n=e.clone().subtract(1,\"days\"),t=r.filter((t=>t.timestamp<=e.unix()&&t.timestamp>=n.unix())).map((e=>e.amnt)).reduce(((e,n)=>e+n),0);c.push(t),l.push(n.format(\"MMM DD\")),e=n}}return{volume:c.reverse(),dates:l.reverse()}})))(this.arweave,this.exchangeContract,this.exchangeWallet)}chainRate(e){return v(this.arweave,e,this.exchangeContract,this.exchangeWallet)}createOrder(e,n,t,a,i){return this.keyfile?I(this.arweave,this.keyfile,e,n,t,a,this.exchangeContract,this.exchangeWallet,i):new Promise((e=>e(\"keyfile\")))}createSwap(e,n,t,a,i){return this.keyfile?$(this.arweave,this.keyfile,e,n,this.exchangeWallet,this.exchangeContract,t,a,i):new Promise((e=>e(\"keyfile\")))}getAssets(e){return((e,t,a,i)=>s(void 0,void 0,void 0,(function*(){const s=(e=>{const n={};return e.filter((e=>!(e.id in n)&&(n[e.id]=!0)))})([...yield f(e,i),...yield y(e,a,i)]),o=[];for(let a=0;a<s.length;a++){const i=yield n(e,s[a].id);i.balances[t]>0&&o.push({id:s[a].id,name:s[a].name,ticker:s[a].ticker,balance:i.balances[t]})}return o.sort(((e,n)=>n.balance-e.balance)),o})))(this.arweave,e,this.exchangeContract,this.exchangeWallet)}getConfig(e){return p(this.arweave,e,this.exchangeWallet)}getExchanges(e){return((e,n,t,i)=>s(void 0,void 0,void 0,(function*(){const s=[],r=(yield o({query:'query($owners: [String!], $num: Int) {\\n  transactions(\\n    owners: $owners\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: [\"Buy\", \"Sell\"] }\\n    ]\\n    first: $num\\n  ) {\\n    edges {\\n      node {\\n        id\\n        block {\\n          timestamp\\n        }\\n        quantity {\\n          ar\\n        }\\n        tags {\\n          name\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n',variables:{owners:[n],num:5}})).data.transactions.edges,d=yield y(e,t,i);r.map((({node:e})=>{var n,t,i,o;const r=null===(n=e.tags.find((e=>\"Type\"===e.name)))||void 0===n?void 0:n.value;if(r){const n=\"Buy\"===r?\"Token\":\"Contract\",c=null===(t=e.tags.find((e=>e.name===n)))||void 0===t?void 0:t.value,l=null===(i=d.find((e=>e.id===c)))||void 0===i?void 0:i.ticker,u=\"Buy\"===r?parseFloat(e.quantity.ar)+\" AR\":JSON.parse((null===(o=e.tags.find((e=>\"Input\"===e.name)))||void 0===o?void 0:o.value)||\"\").qty+\" \"+l,m=\"??? \"+(\"Buy\"===r?l:\"AR\");s.push({id:e.id,timestamp:e.block?a.unix(e.block.timestamp).format(\"YYYY-MM-DD hh:mm:ss\"):\"not mined yet\",type:r,sent:u,received:m,status:\"pending\",duration:\"not completed\"})}})),(yield o({query:'query($owners: [String!], $num: Int) {\\n  transactions(\\n    owners: $owners\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: [\"Swap\"] }\\n    ]\\n    first: $num\\n  ) {\\n    edges {\\n      node {\\n        id\\n        block {\\n          timestamp\\n        }\\n        quantity {\\n          ar\\n        }\\n        tags {\\n          name\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n',variables:{owners:[n],num:5}})).data.transactions.edges.map((({node:e})=>{var n,t,i;const o=null===(n=e.tags.find((e=>\"Chain\"===e.name)))||void 0===n?void 0:n.value,r=null===(t=e.tags.find((e=>\"Hash\"===e.name)))||void 0===t?void 0:t.value;o&&(r?s.push({id:e.id,timestamp:e.block?a.unix(e.block.timestamp).format(\"YYYY-MM-DD hh:mm:ss\"):\"not mined yet\",type:\"\",sent:(null===(i=e.tags.find((e=>\"Value\"===e.name)))||void 0===i?void 0:i.value)+\" \"+o,received:\"??? AR\",status:\"pending\",duration:\"not completed\"}):s.push({id:e.id,timestamp:e.block?a.unix(e.block.timestamp).format(\"YYYY-MM-DD hh:mm:ss\"):\"not mined yet\",type:\"\",sent:parseFloat(e.quantity.ar)+\" AR\",received:\"??? \"+o,status:\"pending\",duration:\"not completed\"}))}));for(let e=0;e<s.length;e++){let n=(yield o({query:'query($txID: [String!]!) {\\n  transactions(\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: \"Confirmation\" }\\n      { name: \"Match\", values: $txID }\\n    ]\\n  ) {\\n    edges {\\n      node {\\n        block {\\n          timestamp\\n        }\\n        tags {\\n          name\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n',variables:{txID:s[e].id}})).data.transactions.edges;if(n[0]||(n=(yield o({query:'query($txID: [String!]!) {\\n  transactions(\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: \"Confirmation\" }\\n      { name: \"Swap\", values: $txID }\\n    ]\\n  ) {\\n    edges {\\n      node {\\n        block {\\n          timestamp\\n        }\\n        tags {\\n          name\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n',variables:{txID:s[e].id}})).data.transactions.edges),n[0]){if(s[e].status=\"success\",n[0].node.block){const t=a(s[e].timestamp),i=a(a.unix(n[0].node.block.timestamp).format(\"YYYY-MM-DD hh:mm:ss\")),o=a.duration(i.diff(t));s[e].duration=o.humanize()}else s[e].duration=\"not mined yet\";const t=n[0].node.tags.find((e=>\"Received\"===e.name));if(t){const n=t.value.split(\" \");s[e].received=parseFloat(parseFloat(n[0]).toFixed(5))+\" \"+n[1]}}(yield o({query:'query($txID: [String!]!) {\\n  transactions(\\n    tags: [\\n      { name: \"Exchange\", values: \"Verto\" }\\n      { name: \"Type\", values: \"Cancel\" }\\n      { name: \"Order\", values: $txID }\\n    ]\\n  ) {\\n    edges {\\n      node {\\n        id\\n      }\\n    }\\n  }\\n}\\n',variables:{txID:s[e].id}})).data.transactions.edges[0]&&(s[e].status=\"failed\",s[e].duration=\"cancelled\")}return s.sort(((e,n)=>a(n.timestamp).unix()-a(e.timestamp).unix())).slice(0,5)})))(this.arweave,e,this.exchangeContract,this.exchangeWallet)}getPostStake(e){return c(this.arweave,e,this.exchangeContract)}getReputation(e){return l(this.arweave,e,this.exchangeContract)}getTokens(){return y(this.arweave,this.exchangeContract,this.exchangeWallet)}getTPTokens(e){return((e,n,t,a)=>s(void 0,void 0,void 0,(function*(){const i=yield p(e,n,a),s=[...yield f(e,a),...yield y(e,t,a)];return i.blockedTokens.map((e=>{const n=s.find((n=>n.id===e));let t=-1;n&&(t=s.indexOf(n)),t>-1&&s.splice(t,1)})),(e=>{const n={};return e.filter((e=>!(e.id in n)&&(n[e.id]=!0)))})(s)})))(this.arweave,e,this.exchangeContract,this.exchangeWallet)}getTradingPosts(){return u(this.arweave,this.exchangeContract,this.exchangeWallet)}getTransactions(e){return((e,n)=>s(void 0,void 0,void 0,(function*(){let t=[];const a=(yield e.network.getInfo()).height,i=(yield o({query:D,variables:{owners:[n],block:a}})).data.transactions.edges,s=(yield o({query:D,variables:{recipients:[n],block:a}})).data.transactions.edges;i.map((({node:e})=>{t.push({id:e.id,amount:parseFloat(parseFloat(e.quantity.ar).toFixed(2)),type:\"out\",status:\"\",timestamp:e.block.timestamp})})),s.map((({node:e})=>{t.push({id:e.id,amount:parseFloat(parseFloat(e.quantity.ar).toFixed(2)),type:\"in\",status:\"\",timestamp:e.block.timestamp})})),t.sort(((e,n)=>n.timestamp-e.timestamp)),t=t.slice(0,5);for(let n=0;n<t.length;n++)try{200===(yield e.transactions.getStatus(t[n].id)).status?t[n].status=\"success\":t[n].status=\"pending\"}catch(e){console.log(e)}return t})))(this.arweave,e)}latestChainRate(e){return((e,n,t,a)=>s(void 0,void 0,void 0,(function*(){const i=yield v(e,n,t,a);return i.rates[i.rates.length-1]})))(this.arweave,e,this.exchangeContract,this.exchangeWallet)}latestPrice(e){return((e,n,t,a)=>s(void 0,void 0,void 0,(function*(){const i=yield w(e,n,t,a);if(i)return i.prices[i.prices.length-1]})))(this.arweave,e,this.exchangeContract,this.exchangeWallet)}latestVolume(e){return((e,n,t,i)=>s(void 0,void 0,void 0,(function*(){const s=yield u(e,t,i),r=(yield o({query:g,variables:{recipients:s,token:n,num:d}})).data.transactions.edges,c=[];if(r.map((({node:e})=>{const n=e.tags.find((e=>\"Input\"===e.name));n&&c.push({amnt:JSON.parse(n.value).qty,timestamp:e.block.timestamp})})),c.length>0){const e=a().add(1,\"days\").hours(0).minutes(0).seconds(0),n=e.clone().subtract(1,\"days\");return c.filter((t=>t.timestamp<=e.unix()&&t.timestamp>=n.unix())).map((e=>e.amnt)).reduce(((e,n)=>e+n),0)}return 0})))(this.arweave,e,this.exchangeContract,this.exchangeWallet)}popularTokens(){return f(this.arweave,this.exchangeWallet)}price(e){return w(this.arweave,e,this.exchangeContract,this.exchangeWallet)}recommendPost(){return((e,n,t)=>s(void 0,void 0,void 0,(function*(){const a=yield u(e,n,t),i={};let s=0;for(const t of a){const a=yield l(e,t,n);i[t]=a,s+=a}const o={};for(const e of a)o[e]=i[e]/s;return k(o)})))(this.arweave,this.exchangeContract,this.exchangeWallet)}saveToken(e){return this.keyfile?((e,n,t,a,i)=>s(void 0,void 0,void 0,(function*(){if(\"undefined\"!=typeof window){if(!(yield y(e,a,i)).find((e=>e.id===n))){if(0===(yield o({query:'\\n            query($exchange: String!, $user: String!, $contract: [String!]!) {\\n              transactions(\\n                owners: [$user]\\n                recipients: [$exchange]\\n                tags: [\\n                  { name: \"Exchange\", values: \"Verto\" }\\n                  { name: \"Type\", values: \"Token\" }\\n                  { name: \"Contract\", values: $contract }\\n                ]\\n                first: 2147483647\\n              ) {\\n                edges {\\n                  node {\\n                    owner {\\n                      address\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          ',variables:{exchange:i,user:yield e.wallets.jwkToAddress(t),contract:n}})).data.transactions.edges.length){const a={Exchange:\"Verto\",Type:\"Token\",Contract:n},s=yield e.createTransaction({target:i,data:Math.random().toString().slice(-4)},t);for(const[e,n]of Object.entries(a))s.addTag(e,n);yield e.transactions.sign(s,t),yield e.transactions.post(s)}const a=JSON.parse(localStorage.getItem(\"tokens\")||\"[]\");a.push(n),localStorage.setItem(\"tokens\",JSON.stringify(a))}return n}})))(this.arweave,e,this.keyfile,this.exchangeContract,this.exchangeWallet):new Promise((e=>e()))}sendOrder(e){return this.keyfile?((e,n,t)=>s(void 0,void 0,void 0,(function*(){for(const a of t)yield e.transactions.sign(a,n),yield e.transactions.post(a)})))(this.arweave,this.keyfile,e):new Promise((e=>e(\"keyfile\")))}sendSwap(e){return this.keyfile?((e,n,t)=>s(void 0,void 0,void 0,(function*(){for(const a of t)a.id?(yield e.transactions.sign(a,n),yield e.transactions.post(a)):\"ETH\"===a.chain&&\"undefined\"!=typeof window&&void 0!==window.ethereum&&(a.value*=1e18,yield window.ethereum.request({method:\"eth_requestAccounts\"}),yield window.ethereum.request({method:\"eth_sendTransaction\",params:[{to:a.to,from:window.ethereum.selectedAddress,value:a.value.toString(16)}]}))})))(this.arweave,this.keyfile,e):new Promise((e=>e(\"keyfile\")))}volume(e){return h(this.arweave,e,this.exchangeContract,this.exchangeWallet)}}\n","import Verto from '@verto/lib'\nimport { JWKInterface } from \"arweave/node/lib/wallet\";\n\nconst getVerto = async (key: any) => {\n    return new Verto(key)\n}\n\nexport const getOpenBuyDeets = async (contractID: string, key: JWKInterface): Promise<{ volume: number, averageRate: number, rates: any[] }> => {\n    let verto = await getVerto(key)\n    let tPosts = await verto.getTradingPosts()\n    let config = await verto.getConfig(tPosts[0])\n    if (config.hasOwnProperty('publicURL')) {\n        //@ts-ignore\n        let res = await (await fetch(`https://${config.publicURL}/orders`)).json()\n        try {\n            let orders = res.find((token: any) => token.token === contractID).orders.filter((order: any) => order.type === \"Sell\")\n                .sort((orderA: any, orderB: any) => orderB.rate - orderA.rate)\n            let totalOrders = orders.reduce((total: number, order: any) => total + order.amnt, 0)\n            let averageRate = orders.reduce((average: number, order: any) => average + (order.amnt / totalOrders) * order.rate, 0)\n            let individualRates = orders.map((order: any) => { return ({ rate: 1 / order.rate, amount: order.amnt }) })\n            return { volume: totalOrders, averageRate: 1 / averageRate, rates: individualRates }\n        }\n        catch (err) {\n            console.log(err)\n            return { volume: 0, averageRate: 0, rates: [] }\n        }\n    }\n    else return { volume: 0, averageRate: 0, rates: [] }\n}\n\nexport const getOpenSellDeets = async (contractID: string, key: JWKInterface): Promise<{ volume: number, averageRate: number, rates: any[] }> => {\n    let verto = await getVerto(key)\n    let tPosts = await verto.getTradingPosts()\n    let config = await verto.getConfig(tPosts[0])\n    if (config.hasOwnProperty('publicURL')) {\n        //@ts-ignore\n        let res = await (await fetch(`https://${config.publicURL}/orders`)).json()\n        try {\n            let orders = res.find((token: any) => token.token === contractID).orders.filter((order: any) => order.type === \"Buy\")\n                .sort((orderA: any, orderB: any) => orderA.rate - orderB.rate)\n            let totalOrders = orders.reduce((total: number, order: any) => total + order.amnt, 0)\n            let averageRate = orders.reduce((average: number, order: any) => average + (order.amnt / totalOrders) * order.rate, 0)\n            let individualRates = orders.map((order: any) => { return ({ rate: order.rate, amount: order.amnt }) })\n            return { volume: totalOrders, averageRate: averageRate, rates: individualRates }\n        }\n        catch (err) {\n            console.log(err)\n            return { volume: 0, averageRate: 0, rates: [] }\n        }\n    }\n    else return { volume: 0, averageRate: 0, rates: [] }\n}\n\nexport const createTrade = async (trade: string, amount: number, key: JWKInterface, contractID: string): Promise<any> => {\n    let verto = await getVerto(key)\n    let tPosts = await verto.getTradingPosts()\n    let txns = await verto.createOrder(trade, amount, contractID, tPosts[0])\n    console.log(txns)\n    return txns\n}\n\nexport const executeTrade = async (txns: any, key: JWKInterface): Promise<any> => {\n    let verto = await getVerto(key)\n    let res = await verto.sendOrder(txns)\n    console.log(res)\n    return res\n}","import {\n    Box, Button, Center, Divider, Heading, HStack, Input,\n    Popover, PopoverArrow, PopoverBody,\n    PopoverCloseButton, PopoverContent,\n    PopoverHeader, PopoverTrigger, Spinner, Text, VStack\n} from \"@chakra-ui/core\";\nimport React from 'react';\nimport WalletContext from '../context/walletContext';\nimport { createTrade, executeTrade, getOpenBuyDeets, getOpenSellDeets } from '../providers/verto';\n\ninterface VertoProps {\n    contractID: string,\n    ticker: string,\n    balance: string\n}\n\nconst VertoWidget: React.FC<VertoProps> = ({ contractID, ticker, balance }) => {\n    const [loading, setLoading] = React.useState(false)\n    const [trades, setTrades] = React.useState({} as any)\n    const [purchaseAmount, setAmount] = React.useState('')\n    const [convertedAmount, setConversion] = React.useState(0)\n    const [maxBuy, setMax] = React.useState(0)\n    const { state } = React.useContext(WalletContext)\n    const [sellAmount, setSell] = React.useState('')\n    const [sellConvertedAmount, setSellConversion] = React.useState(0)\n    const [txns, setTxns] = React.useState({} as any)\n\n    React.useEffect(() => {\n        setLoading(true)\n        let mounted = true\n        const getTrades = async () => {\n            let buy = await getOpenBuyDeets(contractID, state.key)\n            let sell = await getOpenSellDeets(contractID, state.key)\n            if (mounted) await setTrades({ buy: buy, sell: sell })\n            if (mounted) {\n                setLoading(false)\n                let txns = await createTrade(\"Buy\", Math.floor(parseFloat(state.balance)), state.key, contractID);\n                if (mounted) setMax(txns.ar)\n            }\n\n        }\n        getTrades()\n        return () => {\n            mounted = false\n        }\n    }, [])\n\n    const createBuy = async () => {\n        if (convertedAmount === 0) {\n            await calculateAr();\n        }\n        let res = await createTrade(\"Buy\", convertedAmount, state.key, contractID)\n        await setTxns(res)\n        setAmount('')\n        console.log(txns)\n    }\n\n    const calculateAr = async () => {\n        let amount = parseInt(purchaseAmount)\n        if (!amount) {\n            setConversion(0)\n            return\n        }\n        else {\n            let ar = 0\n            for (let j = 0; j < trades.buy.rates.length; j++) {\n                if (trades.buy.rates[j].amount < amount) {\n                    ar += trades.buy.rates[j].amount * trades.buy.rates[j].rate\n                    amount -= trades.buy.rates[j].amount\n                }\n                else {\n                    ar += trades.buy.rates[j].rate * amount\n                    break;\n                }\n            }\n            setConversion(ar)\n        }\n    }\n\n    const handleOrder = async () => {\n        let res = await executeTrade(txns.txs, state.key)\n        setTxns({})\n        console.log(res)\n    }\n\n    const createSell = async () => {\n        if (sellConvertedAmount === 0) {\n            await calcSalePrice()\n        }\n        let res = await createTrade(\"Sell\", parseInt(sellAmount), state.key, contractID)\n        await setTxns(res)\n        console.log(txns)\n        setSell('')\n    }\n\n    const calcSalePrice = async () => {\n        let amount = parseInt(sellAmount)\n        if (!amount) {\n            setSellConversion(0)\n            return\n        }\n        let ar = 0\n        trades.sell.rates.every((rate: { amount: number, rate: number }) => {\n            if (amount > rate.amount) {\n                ar += rate.amount * rate.rate;\n                amount -= rate.amount\n                return true\n            }\n            else {\n                ar += amount * rate.rate;\n                return false\n            }\n        })\n        setSellConversion(ar)\n    }\n\n    return (\n        <VStack align=\"center\">\n            <Heading size=\"sm\">Verto Exchange</Heading>\n            {loading && <Center h=\"100px\"><Spinner /></Center>}\n            {!loading && <Box>\n                <Heading size=\"sm\">Buy {ticker}</Heading>\n                <Divider />\n                {trades.buy && trades.buy.volume > 0 ? <>\n                    <Text>Average Buy Price: {trades.buy.averageRate.toLocaleString(undefined, { maximumFractionDigits: 6 })} {ticker}/AR</Text>\n                    <Text>Total Available {ticker}: {trades.buy.volume}</Text>\n                    <Text>Total AR you can spend: {maxBuy}</Text>\n                    <HStack>\n                        <Input placeholder=\"Enter amount\" w=\"50%\" value={purchaseAmount}\n                            onChange={((evt: React.ChangeEvent<HTMLInputElement>) => setAmount(evt.target.value))}\n                            onBlur={calculateAr} />\n                        <Text>Cost in AR: {convertedAmount}</Text>\n                        <Popover closeOnBlur={false}>\n                            {({ onClose }) =>\n                                <>\n                                    <PopoverTrigger><Button disabled={!purchaseAmount || parseInt(purchaseAmount) <= 0 || parseInt(purchaseAmount) === NaN} onClick={createBuy}>Buy</Button>\n                                    </PopoverTrigger>\n                                    <PopoverContent>\n                                        <PopoverArrow />\n                                        <PopoverCloseButton />\n                                        <PopoverHeader>Order Confirmation</PopoverHeader>\n                                        <PopoverBody>\n                                            <VStack>\n                                                <Text>Transaction Cost: {txns.ar}</Text>\n                                                <Text>{ticker} received: {purchaseAmount}</Text>\n                                                <Text>Wallet balance after transaction: {parseFloat(state.balance) - txns.ar}</Text>\n                                                <Button onClick={() => { handleOrder(); onClose() }}>Submit Order</Button>\n                                            </VStack>\n                                        </PopoverBody>\n                                    </PopoverContent>\n                                </>}\n                        </Popover>\n                    </HStack>\n                </>\n                    :\n                    <Text>No open buy orders</Text>}\n                <Heading size=\"sm\">Sell {ticker}</Heading>\n                <Divider />\n                {trades.sell && trades.sell.volume > 0 ? <>\n\n                    <Text>Average Sell Price: {trades.sell.averageRate.toLocaleString(undefined, { maximumFractionDigits: 6 })} {ticker}/AR</Text>\n                    <Text>Total of open orders: {trades.sell.volume} {ticker}</Text>\n                    <HStack>\n                        <Input placeholder=\"Enter amount\" value={sellAmount}\n                            invalid={parseInt(sellAmount) > parseInt(balance)}\n                            onChange={((evt: React.ChangeEvent<HTMLInputElement>) => setSell(evt.target.value))}\n                            onBlur={calcSalePrice}\n                        />\n                        <Text>Amount in AR: {sellConvertedAmount}</Text>\n                        <Popover closeOnBlur={false}>\n                            {({ onClose }) =>\n                                <>\n                                    <PopoverTrigger><Button disabled={parseInt(sellAmount) > parseInt(balance) || parseInt(sellAmount) <= 0} onClick={createSell}>Sell</Button>\n                                    </PopoverTrigger>\n                                    <PopoverContent>\n                                        <PopoverArrow />\n                                        <PopoverCloseButton />\n                                        <PopoverHeader>Order Confirmation</PopoverHeader>\n                                        <PopoverBody>\n                                            <VStack>\n                                                <Text>Transaction Cost: {txns.pst} {ticker}</Text>\n                                                <Text>AR received: {sellConvertedAmount}</Text>\n                                                <Text>Wallet balance after transaction: {parseFloat(state.balance) + sellConvertedAmount}</Text>\n                                                <Button onClick={() => { handleOrder(); onClose() }}>Submit Order</Button>\n                                            </VStack>\n                                        </PopoverBody>\n                                    </PopoverContent>\n                                </>}\n                        </Popover>\n                    </HStack>\n                </>\n                    : <Text>No open sell orders</Text>}\n            </Box>}\n        </VStack>\n    )\n}\n\nexport default VertoWidget","\nimport {\n    Avatar, Box, Button, Collapse, Drawer,\n    DrawerBody, DrawerCloseButton, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, Heading, HStack,\n    Stack, Text, useDisclosure\n} from \"@chakra-ui/core\";\nimport React from 'react';\nimport WalletContext from '../context/walletContext';\nimport { timeLeft } from '../providers/wallets';\nimport VertoWidget from './VertoWidget';\n\ninterface PSTDrawerProps {\n    isOpen: boolean,\n    close: () => void,\n    contractState: any\n}\n\ninterface VaultProps {\n    vault: {\n        [address: string]: any\n    }\n}\n\nconst PSTBalances = (balances: any) => {\n    const [total, setTotal] = React.useState(0)\n    const [open, setOpen] = React.useState(false)\n    React.useEffect(() => {\n        let mounted = true\n        let totalBalance = 0\n        for (const [key, value] of Object.entries(balances.balances)) {\n            totalBalance += value as number\n        }\n        if (mounted) setTotal(totalBalance)\n        return () => { mounted = false }\n    }, [balances])\n\n    return (\n        <Box w='100%'>\n            <Box bg=\"white\" border=\"1px\" borderColor=\"grey\" onClick={() => setOpen(!open)}><Text>All balances - {total} in circulation</Text></Box>\n            <Collapse in={open}>\n                {Object.entries(balances.balances).map((balance: any[]) => {\n                    return (<HStack w=\"100%\" key={balance[0] + 1}>\n                        <Text key={balance[0]} maxWidth=\"200px\" whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\">{balance[0]}:</Text>\n                        <Text key={balance[0] + balance[0]}>{balance[1].toString()}</Text>\n                    </HStack>)\n                })\n                }\n            </Collapse>\n        </Box>\n    )\n}\n\nconst PSTVault: React.FC<VaultProps> = ({ vault }) => {\n    const [total, setTotal] = React.useState(0)\n    const { isOpen, onToggle } = useDisclosure()\n\n    React.useEffect(() => {\n        let mounted = true\n        let totalBalance = 0\n        for (const [key, value] of Object.entries(vault)) {\n            if (value[0]) totalBalance += value[0].balance\n        }\n        if (mounted) setTotal(totalBalance)\n        return () => { mounted = false }\n    }, [vault])\n\n    return (\n        <Box w='100%'>\n            <Box bg=\"white\" border=\"1px\" borderColor=\"grey\" onClick={onToggle}><Text>Vaulted balances: {total}</Text></Box>\n            <Collapse in={isOpen}>\n                {Object.keys(vault).map((key) => {\n                    if (vault[key].length > 0)\n                        return vault[key].map((balance: any, index: number) => {\n                            return (<Box key={key + index} fontSize={12}>\n                                <Text key={key} maxWidth=\"100%\" whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\">Address: {key}</Text>\n                                <HStack><Text key={balance.toString()}>Balance: {balance.balance}</Text>\n                                    <Text key={balance.start + balance.end + key}>End Block: {balance.end}</Text></HStack>\n                            </Box>)\n                        })\n                    return null\n                })\n                }\n            </Collapse>\n        </Box>\n    )\n}\nconst PSTDrawer: React.FC<PSTDrawerProps> = ({ isOpen, close, contractState }) => {\n    const { state } = React.useContext(WalletContext)\n    const [vaultTime, setVault] = React.useState([] as any[])\n    const [logo, setLogo] = React.useState('')\n\n    React.useEffect(() => {\n        let mounted = true\n        console.log(contractState)\n        const getVaultTimes = async (vault: any) => {\n            if (!mounted) return\n            let vaultTimes = await Promise.all(vault[state.address].map(async (balance: any) => {\n                let endBlock = balance?.end\n                if (endBlock) {\n                    let message = await timeLeft(state.blockHeight ? state.blockHeight : 0, endBlock)\n                    return { balance: balance.balance, message: message }\n                }\n            }))\n            if (mounted) setVault(vaultTimes)\n        }\n        if (contractState.vault && contractState.vault[state.address]) {\n            getVaultTimes(contractState.vault)\n        }\n        return () => { mounted = false }\n    }, [contractState])\n\n    React.useEffect(() => {\n        let url\n        try {\n            if (contractState.settings)\n                url = contractState.settings.filter((setting: any) => setting[0] === 'communityLogo')[0][1]\n            setLogo(url)\n        }\n        catch (err) {\n            console.log('error loading logo')\n            console.log(err)\n        }\n\n        if (url) setLogo(url)\n        return () => { setLogo('') }\n    }, [contractState])\n\n    return (<>\n        {contractState.balances && <Drawer isOpen={isOpen} placement=\"right\" onClose={close} size=\"full\">\n            <DrawerOverlay />\n            <DrawerContent >\n                <DrawerCloseButton onClick={close} />\n                <DrawerHeader >\n                    {contractState.name && <Heading size=\"md\">{contractState.name}</Heading>}\n                    <HStack>\n                        <Text>{contractState.ticker}</Text>\n                        {logo !== '' && <Avatar src={`https://arweave.net/${logo}`} />}\n                    </HStack>\n                </DrawerHeader>\n                <DrawerBody>\n                    <Stack>\n                        <Text>Balance: {contractState.balances[state.address] ? contractState.balances[state.address] : 0}</Text>\n                        {\n                            vaultTime.map((vault: { balance: string, message: string }, index: number) => {\n                                return (<HStack>\n                                    <Text key={index + vault.toString()}>Vaulted Balance: {vault.balance}</Text>\n                                    <Text key={index + vault.message}>{vault.message}</Text>\n                                </HStack>)\n                            })\n                        }\n                        <VertoWidget contractID={contractState.contractID} ticker={contractState.ticker} balance={contractState.balances[state.address]} />\n                    </Stack>\n                    {contractState.balances && <PSTBalances balances={contractState.balances} />}\n                    {contractState.vault && <PSTVault vault={contractState.vault} />}\n                </DrawerBody>\n                {/* margin is a hack to get buttons to show on mobile browsers */}\n                <DrawerFooter mb={{ base: \"25%\", sm: \"25%\", md: \"25%\", lg: 0, xl: 0 }}>\n                    <Button variant=\"outline\" onClick={close} mr={3}>Close</Button>\n                </DrawerFooter>\n            </DrawerContent>\n        </Drawer>}\n    </>)\n}\n\nexport default PSTDrawer\n","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    Text, Button, Input, Stack,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useToast, InputRightElement, InputGroup, FormControl, FormErrorMessage, Modal\n} from \"@chakra-ui/core\";\nimport { getFee, sendTransfer } from '../providers/wallets'\n\nimport WalletContext from '../context/walletContext'\n\nconst TransferModal = (props: any) => {\n    const [isOpen, setOpen] = useState(props.props.modal)\n    const { state } = React.useContext(WalletContext)\n    const [amount, setAmount] = useState('')\n    const [fee, setFee] = useState('0')\n    const [to, setToAddress] = useState('')\n    const [next, setNext] = useState(false)\n    const [validAmount, setValid] = useState(true)\n    const toast = useToast()\n\n\n    const updateFee = () => {\n        getFee(0).then(cost => setFee(cost))\n            .catch(() => toast({\n                title: 'Error',\n                status: 'error',\n                duration: 3000,\n                position: 'bottom-left',\n                description: 'Error getting fee, check your network connection and try again'\n            }))\n    }\n\n    useEffect(() => {\n        setOpen(props.props.modal)\n        updateFee()\n    }, [props.props.modal])\n\n    const initiateTransfer = async () => {\n        let transferDeets = {\n            'to': to,\n            'fee': fee,\n            'txnId': '',\n            'amount': amount,\n        }\n        sendTransfer(transferDeets, state.key)\n        setOpen(false)\n    }\n\n    const validateAmount = () => {\n        amount === '' ?\n            setValid(true) :\n            setValid(parseFloat((parseFloat(state.balance) - parseFloat(fee) - parseFloat(amount)).toFixed(12)) >= 0)\n    }\n\n    const setMax = async () => {\n        let balance = parseFloat(state.balance)\n        let amount = balance - parseFloat(fee)\n        setAmount(amount.toString())\n    }\n    \n    return (<Modal closeOnOverlayClick={false} isCentered isOpen={isOpen} onClose={() => {\n        setOpen(false)\n        props.props.closeModal()\n    }}>\n        <ModalOverlay />\n        <ModalContent>\n            <ModalHeader>Send AR</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n                <Stack spacing={2}>\n                    <Stack>\n                        <Text>From:</Text>\n                        <Text fontSize={14} whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\">{state.address}</Text>\n                    </Stack>\n                    {!next && <Fragment>\n                        <Stack spacing={2}>\n                            <FormControl isInvalid={to === state.address}>\n                                <Input placeholder=\"Send to Arweave wallet address\"\n                                    value={to}\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setToAddress(e.target.value)}\n                                    onBlur={updateFee}\n                                    isInvalid={to === state.address} />\n                                <FormErrorMessage>Recipient address cannot be the same as the sending address</FormErrorMessage>\n                            </FormControl>\n\n                            <FormControl isInvalid={!validAmount}>\n                                <InputGroup>\n                                    <Input\n                                        placeholder=\"Amount\"\n                                        value={amount}\n                                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAmount(e.target.value)}\n                                        onBlur={() => validateAmount()}\n                                        isInvalid={!validAmount}\n                                    />\n                                    <InputRightElement children='AR' />\n                                </InputGroup>\n                                <FormErrorMessage>Amount cannot be greater than wallet balance</FormErrorMessage>\n                            </FormControl>\n                            <Button border=\"none\" onClick={setMax}>Use Wallet Balance</Button>\n\n                            <Text>Fee: {fee} AR</Text>\n                            <Text>Total (including fee): {(parseFloat(fee) + parseFloat(amount ? amount : '0')).toLocaleString('en-US', { style: 'decimal', minimumFractionDigits: (fee !== '0') ? fee.split('.')[1].length : 1 })} AR</Text>\n                        </Stack>\n                    </Fragment>}\n                    {next && <Fragment>\n                        <Stack spacing={2}>\n                            <Stack>\n                                <Text>To:</Text>\n                                <Text fontSize={14}>{to}</Text>\n                            </Stack>\n                            <Stack isInline>\n                                <Stack>\n                                    <Text>Sending</Text>\n                                    <Text>{amount} AR</Text>\n                                </Stack>\n                                <Stack>\n                                    <Text>Fee</Text>\n                                    <Text>{fee} AR</Text>\n                                </Stack>\n                            </Stack>\n                            <Stack>\n                                <Text>Total</Text>\n                                <Text>{(parseFloat(fee) + parseFloat(amount ? amount : '0')).toLocaleString('en-US', { style: 'decimal', minimumFractionDigits: (fee !== '0') ? fee.split('.')[1].length : 1 })} AR</Text>\n                            </Stack>\n                            <Stack>\n                                <Text>Balance after transaction</Text>\n                                <Text>{(parseFloat(state.balance) - parseFloat(fee) - parseFloat(amount)).toString()} AR</Text>\n                            </Stack>\n                        </Stack>\n                    </Fragment>}\n                </Stack>\n            </ModalBody>\n            <ModalFooter>\n                {!next ? <Button bg=\"#333\" color=\"white\" w=\"100%\" isDisabled={!validAmount || (to === '')} onClick={() => setNext(true)}>Next</Button> :\n                    <Button bg=\"#333\" color=\"white\" w=\"100%\" onClick={function () {\n                        initiateTransfer();\n                        setOpen(false)\n                        props.props.closeModal();\n                    }}>Confirm and Send AR</Button>}\n            </ModalFooter>\n        </ModalContent>\n    </Modal>\n    )\n}\n\nexport default TransferModal","import {\n  Box,\n  Button,\n  Center,\n  Divider,\n  FormControl,\n  FormErrorMessage,\n  Heading,\n  Icon,\n  Input,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverCloseButton,\n  PopoverContent,\n  PopoverHeader,\n  PopoverTrigger,\n  Select,\n  SimpleGrid,\n  Spinner,\n  Stack,\n  Text,\n  useToast,\n} from \"@chakra-ui/core\";\nimport { set } from \"idb-keyval\";\nimport React from \"react\";\nimport { FaCaretRight } from \"react-icons/fa\";\nimport WalletContext, { token } from \"../context/walletContext\";\nimport {\n  getFee,\n  sendTokens,\n  getToken,\n  getAllCommunityIds,\n} from \"../providers/wallets\";\nimport PSTDrawer from \"./PSTDrawer\";\nimport TransferModal from \"./TransactionModal\";\n\ninterface AddTokenProps {\n  close: () => void;\n}\n\nconst AddToken: React.FC<AddTokenProps> = ({ close }) => {\n  const { state, dispatch } = React.useContext(WalletContext);\n  const [address, setAddress] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [valid, setValid] = React.useState(true);\n  const toast = useToast();\n\n  const update = async () => {\n    setLoading(true);\n    let tokens = [...state.tokens];\n    if (\n      state.tokenAddresses &&\n      !state.tokenAddresses.find((tokenAddress) => tokenAddress === address)\n    ) {\n      try {\n        let deets = await getToken(address);\n        tokens.push(deets);\n        dispatch({ type: \"UPDATE_TOKENS\", payload: { tokens: tokens } });\n        setAddress(\"\");\n        setLoading(false);\n        close();\n      } catch (err) {\n        console.log(\"error adding token\");\n        console.log(err);\n        toast({\n          title: \"Error loading token\",\n          status: \"error\",\n          duration: 3000,\n          position: \"bottom\",\n          description: \"Please check contract ID and try again\",\n        });\n        setAddress(\"\");\n        setLoading(false);\n        close();\n      }\n    } else\n      toast({\n        title: \"Token already in list\",\n        status: \"error\",\n        duration: 3000,\n        position: \"bottom\",\n        description: \"Please check contract ID and try again\",\n      });\n    setAddress(\"\");\n    setLoading(false);\n    close();\n  };\n\n  const validateToken = () => {\n    console.log(state.tokens);\n    if (\n      state.tokens!.find(\n        (token) =>\n          token &&\n          token.hasOwnProperty(\"contract\") &&\n          token.contract === address\n      )\n    )\n      setValid(false);\n    else setValid(true);\n  };\n\n  return (\n    <Stack>\n      <Heading size=\"sm\">Add Custom Token</Heading>\n      <FormControl isInvalid={!valid}>\n        <Stack isInline>\n          <Input\n            placeholder=\"Contract ID\"\n            onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n              setAddress(evt.target.value);\n            }}\n            onBlur={() => validateToken()}\n          />\n          <Button\n            isDisabled={loading || !valid || address === \"\"}\n            onClick={() => update()}\n          >\n            Add Token\n          </Button>\n          {loading && <Spinner />}\n        </Stack>\n        <FormErrorMessage>Token already loaded</FormErrorMessage>\n      </FormControl>\n    </Stack>\n  );\n};\n\nconst Tokens = () => {\n  const { state, dispatch } = React.useContext(WalletContext);\n  const [modal, openModal] = React.useState(false);\n  const [to, setTo] = React.useState(\"\");\n  const [amount, setAmount] = React.useState(0);\n  const closeModal = () => openModal(false);\n  const [fee, setFee] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n  const [tokensLoading, setTokensLoading] = React.useState(false);\n  const toast = useToast();\n  const [open, setOpen] = React.useState(false);\n  const [currentPST, setPST] = React.useState({});\n  const [tokenList, setList] = React.useState(state.tokens);\n  const [sortOption, setSort] = React.useState(\"balances\");\n\n  React.useEffect(() => {\n    getFee(new Blob([Math.random().toString().slice(-4)]).size).then((fee) =>\n      setFee(fee)\n    );\n  }, []);\n\n  React.useEffect(() => {\n    if (state.address && state.tokens)\n      switch (sortOption) {\n        case \"all\":\n          setList(\n            state.tokens.sort((a, b) => {\n              if (!b.contractState && !a.contractState) return 0;\n              let fa = a.ticker.toUpperCase();\n              let fb = b.ticker.toUpperCase();\n              if (fa > fb) return 1;\n              if (fb > fa) return -1;\n              return 0;\n            })\n          );\n          break;\n        case \"balances\":\n          setList(\n            state.tokens.filter(\n              (token) =>\n                token &&\n                token.contractState &&\n                token.contractState.balances[state.address] > 0\n            )\n          );\n          break;\n        case 'distribution':\n            setList(state.tokens.sort((a, b) => {\n                if (!b.contractState && !a.contractState) return 0;\n                let fa = Object.keys(a.contractState.balances).length\n                let fb = Object.keys(b.contractState.balances).length\n                if (fa < fb) return 1;\n                if (fb < fa) return -1;\n                return 0;\n              }))\n            break;\n        default:\n          setList(state.tokens);\n      }\n  }, [state.tokens, sortOption]);\n\n  React.useEffect(() => {\n    async function* getTokens() {\n      if (state.tokenAddresses) {\n        for (let j = 0; j < state.tokenAddresses?.length; j++) {\n          if (\n            !state.tokens.find(\n              (token) => token.contract === state.tokenAddresses![j]\n            )\n          ) {\n            try {\n              let token = await getToken(state.tokenAddresses[j]);\n              yield token;\n            } catch (err) {\n              console.log(\"error loading token\");\n              console.log(err);\n            }\n          }\n        }\n      }\n    }\n\n    const getTokenDeets = async () => {\n      let tokens: token[] = [];\n      setTokensLoading(true);\n      for await (let token of getTokens()) {\n        console.log(token);\n        tokens.push(token);\n      }\n      setTokensLoading(false);\n      dispatch({ type: \"UPDATE_TOKENS\", payload: { tokens: tokens } });\n      set(\"wallets\", JSON.stringify(state));\n    };\n\n    getTokenDeets();\n  }, [state.tokenAddresses]);\n\n  React.useEffect(() => {\n    const getTokenAddresses = async () => {\n      let tokens = await getAllCommunityIds();\n      dispatch({\n        type: \"SET_TOKEN_ADDRESSES\",\n        payload: { tokenAddresses: tokens },\n      });\n      console.log(state.tokenAddresses);\n    };\n    getTokenAddresses();\n  }, []);\n\n  const initTokenTransfer = async (token: token, onClose: any) => {\n    setLoading(true);\n    let message = await sendTokens(token.contract, amount, to, state.key);\n    setLoading(false);\n    onClose();\n    toast({\n      title: `Transaction Status - ${message}`,\n      status: \"info\",\n      duration: 3000,\n      position: \"bottom\",\n    });\n  };\n\n  const closePSTDrawer = () => setOpen(false);\n\n  return (\n    <Box textAlign=\"left\">\n      <Text whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\">\n        Address: {state.address}\n      </Text>\n      <SimpleGrid columns={3} my={2} alignItems=\"center\">\n        <Text>AR</Text>\n        <Text>\n          {parseFloat(state.balance).toLocaleString(undefined, {\n            maximumFractionDigits: 6,\n          })}\n        </Text>\n        <Button isDisabled={!state.key} onClick={() => openModal(true)}>\n          Send\n        </Button>\n      </SimpleGrid>\n      <Divider my={4} />\n      <Heading align=\"center\" size=\"sm\">\n        Profit Sharing Tokens\n      </Heading>\n      <Select\n        placeholder=\"Filtering options\"\n        value={sortOption}\n        onChange={(evt) => setSort(evt.target.value)}\n      >\n        <option value=\"all\">All tokens</option>\n        <option value=\"balances\">Tokens with balances</option>\n        <option value=\"distribution\">Number of active wallets</option>\n      </Select>\n      <SimpleGrid columns={4}>\n        <Text fontWeight=\"bold\" minWidth=\"150px\">\n          Ticker\n        </Text>\n        <Text fontWeight=\"bold\">Balance</Text>\n      </SimpleGrid>\n      {tokensLoading && (\n        <Center h=\"200px\">\n          <Box align=\"center\">\n            <Spinner pb=\"10px\" />\n            <Text>Loading tokens...</Text>\n          </Box>\n        </Center>\n      )}\n      {tokenList.map((token: token) => {\n        if (token && token.ticker) {\n          return (\n            <SimpleGrid\n              key={token.contract + \"grid\"}\n              borderY=\"1px\"\n              borderColor=\"lightgray\"\n              columns={4}\n              my={2}\n              py={1}\n              alignItems=\"center\"\n            >\n              <Text\n                minWidth=\"150px\"\n                onClick={() => {\n                  setPST({\n                    ...token.contractState,\n                    contractID: token.contract,\n                  });\n                  setOpen(true);\n                }}\n              >\n                {token.ticker}\n              </Text>\n              <Text\n                minWidth=\"120px\"\n                onClick={() => {\n                  setPST({\n                    ...token.contractState,\n                    contractID: token.contract,\n                  });\n                  setOpen(true);\n                }}\n              >\n                {token.contractState.balances[state.address]}\n              </Text>\n              <Popover closeOnBlur={false}>\n                {({ onClose }) => (\n                  <>\n                    <PopoverTrigger>\n                      <Button justifySelf=\"end\">Send</Button>\n                    </PopoverTrigger>\n                    <PopoverContent zIndex={4}>\n                      <PopoverArrow />\n                      <PopoverHeader>Send Tokens</PopoverHeader>\n                      <PopoverCloseButton />\n                      <PopoverBody>\n                        <Stack align=\"center\">\n                          {!loading ? (\n                            <Box>\n                              <Input\n                                my={2}\n                                placeholder={`Amount`}\n                                onChange={(\n                                  evt: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setAmount(parseFloat(evt.target.value));\n                                }}\n                              />\n                              <Input\n                                placeholder={`Address`}\n                                onChange={(\n                                  evt: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setTo(evt.target.value);\n                                }}\n                              />\n                              <Text textAlign=\"center\">Fee: {fee}</Text>\n                              <Button\n                                isDisabled={!state.key}\n                                w=\"90%\"\n                                onClick={() => {\n                                  initTokenTransfer(token, onClose);\n                                }}\n                              >\n                                Submit Transaction\n                              </Button>\n                            </Box>\n                          ) : (\n                            <Box>\n                              <Spinner />\n                              <Text>Submitting Transaction</Text>\n                            </Box>\n                          )}\n                        </Stack>\n                      </PopoverBody>\n                    </PopoverContent>\n                  </>\n                )}\n              </Popover>\n              <Icon\n                justifySelf=\"end\"\n                as={FaCaretRight}\n                onClick={() => {\n                  setPST({\n                    ...token.contractState,\n                    contractID: token.contract,\n                  });\n                  setOpen(true);\n                }}\n              />\n            </SimpleGrid>\n          );\n        }\n      })}\n      <TransferModal props={{ modal, closeModal }} />\n      <Popover placement=\"top-end\">\n        {({ onClose }) => (\n          <>\n            <PopoverTrigger>\n              <Button position=\"fixed\" bottom=\"50px\" left=\"20px\">\n                Add Custom Token\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent>\n              <PopoverCloseButton />\n              <PopoverBody>\n                <AddToken close={onClose} />\n              </PopoverBody>\n            </PopoverContent>\n          </>\n        )}\n      </Popover>\n      <PSTDrawer\n        isOpen={open}\n        close={closePSTDrawer}\n        contractState={currentPST}\n      />\n    </Box>\n  );\n};\nexport default Tokens;\n\n//<Icon position=\"fixed\" right=\"2px\" as={FaCaretRight}  />\n","\nimport React from 'react'\nimport {\n    Drawer,\n    DrawerBody,\n    DrawerFooter,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton, Button, Input, Box, Text, Stack,\n    useToast,\n    SimpleGrid,\n    Heading,\n    Spinner\n} from \"@chakra-ui/core\";\nimport Dropzone from 'react-dropzone'\nimport WalletContext from '../context/walletContext'\nimport { getFee, uploadFile } from '../providers/wallets'\ninterface TxnDrawerProps {\n    isOpen: boolean,\n    close: () => void,\n}\n\ninterface TagsProps {\n    tags: {\n        name: string,\n        value: string\n    }[],\n    clickHandler: (name: string, value: string) => void\n}\n\nconst Tags: React.FC<TagsProps> = ({ tags, clickHandler }) => {\n    const [name, setName] = React.useState('')\n    const [value, setValue] = React.useState('')\n    return (\n        <Stack>\n            <Heading size=\"sm\">Transacion Tags</Heading>\n            {tags.map((tag) => {\n                return (<SimpleGrid key={tag.name + tag.value} columns={2} fontSize={12}>\n                    <Text>Name: {tag.name}</Text>\n                    <Text>Value: {tag.value}</Text>\n                </SimpleGrid>)\n            }\n            )}\n            <Input placeholder=\"Name\" value={name} onChange={(evt: React.ChangeEvent<HTMLInputElement>) => setName(evt.target.value)} />\n            <Input placeholder=\"Value\" value={value} onChange={(evt: React.ChangeEvent<HTMLInputElement>) => setValue(evt.target.value)} />\n            <Button isDisabled={(name === '' || value === '')}\n                onClick={() => {\n                    clickHandler(name, value)\n                    setName('')\n                    setValue('')\n                }}>\n                Add Tag</Button>\n        </Stack>\n    )\n}\n\nconst TransactionDrawer: React.FC<TxnDrawerProps> = ({ isOpen, close }) => {\n    const { state, dispatch } = React.useContext(WalletContext)\n    const toast = useToast();\n    const [data, setData] = React.useState(null as any)\n    const [tags, setTags] = React.useState([] as { name: string; value: string; }[])\n    const [fee, setFee] = React.useState('0')\n    const [loading, setLoading] = React.useState(false)\n\n    React.useEffect(() => {\n        if (state.picture) {\n            fetch(state.picture).then((res) => {\n                return res.blob()\n            }).then((blob) => {\n                //@ts-ignore\n                onDrop([blob])\n                dispatch({ type: 'SET_PICTURE', payload: { picture: '' } })\n            })\n        }\n    }, [state.picture])\n\n    const tagsHandler = (name: string, value: string) => {\n        if (tags !== undefined) {\n            let newTags = [...tags!, { name, value }]\n            setTags(newTags)\n        }\n        else setTags([{ name, value }])\n    }\n\n    const handleClose = () => {\n        setData(null);\n        setTags([]);\n        close()\n    }\n\n    const handleUpload = async () => {\n        setLoading(true)\n        let res = await uploadFile(data, state.key, tags)\n        if (res.startsWith('Transaction')) {\n            toast({\n                title: 'Success',\n                status: 'success',\n                duration: 3000,\n                position: 'bottom',\n                description: 'Your file has been submitted to the blockchain'\n            })\n        }\n        else {\n            toast({\n                title: 'Error submitting transaction',\n                status: 'error',\n                duration: 3000,\n                position: 'bottom',\n                description: res\n            })\n        }\n\n        setTimeout(() => {\n            setLoading(false)\n            handleClose()\n        }\n            , 1000)\n    }\n\n    const onDrop = async (acceptedFiles: File[]) => {\n        const reader = new FileReader()\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = async function (event) {\n            if (event && event.target) {\n                let contents = acceptedFiles[0]\n                let tags = [\n                    { 'name': 'App-Name', 'value': 'ArMob 2.0' },\n                    { 'name': 'Content-Type', 'value': acceptedFiles[0].type }\n                ]\n                let fee = await getFee(acceptedFiles[0].size)\n                setFee(fee)\n                setData(contents)\n                setTags(tags)\n            }\n\n        }\n        try {\n            reader.readAsText(acceptedFiles[0])\n        }\n        catch (err) {\n            console.log('Unable to process file', err)\n            toast({\n                title: 'Error processing file',\n                status: 'error',\n                duration: 3000,\n                position: 'bottom',\n                description: 'Please try again'\n            })\n        }\n    }\n\n    return (\n\n        <Drawer isOpen={isOpen} placement=\"right\" onClose={close} size=\"full\">\n            <DrawerOverlay />\n            <DrawerContent >\n                <DrawerCloseButton onClick={handleClose} />\n                <DrawerHeader>Upload file to Arweave</DrawerHeader>\n                <DrawerBody>\n                    {!data && <Box w=\"100%\" borderStyle='dashed' borderWidth=\"2px\">\n                        <Dropzone onDrop={onDrop}>\n                            {({ getRootProps, getInputProps }) => (\n                                <section>\n                                    <div {...getRootProps()}>\n                                        <input {...getInputProps()} />\n                                        <Box flexDirection=\"row\" padding={3}><Text fontSize={14} textAlign=\"center\">Drop a file or click to select from system file picker</Text></Box>\n                                    </div>\n                                </section>\n                            )}\n                        </Dropzone>\n                    </Box>}\n                    {data && !loading && <Stack>\n                        <Text>Fee: {fee} AR</Text>\n                        <Tags tags={tags} clickHandler={tagsHandler} />\n                    </Stack>}\n                    {data && loading && <Spinner position=\"absolute\" top=\"50%\" left=\"50%\" />}\n                </DrawerBody>\n                {/* margin is a hack to get buttons to show on mobile browsers */}\n                <DrawerFooter mb={{base:\"25%\",sm:\"25%\",md:\"25%\",lg:0,xl:0}}>\n                    <Button variant=\"outline\" onClick={handleClose} mr={3}>Cancel</Button>\n                    <Button color=\"blue\" isDisabled={!data} onClick={handleUpload}>Upload File</Button>\n                </DrawerFooter>\n            </DrawerContent>\n        </Drawer>\n\n    );\n}\n\nexport default TransactionDrawer","import { Accordion, AccordionButton, AccordionIcon, AccordionItem, AccordionPanel, Box, Button, Heading, IconButton, Input, Popover, PopoverContent, PopoverTrigger, Radio, RadioGroup, SimpleGrid, Spinner, Stack, Text } from '@chakra-ui/core'\nimport React from 'react'\nimport { FaCaretRight, FaSearch } from 'react-icons/fa'\nimport WalletContext from '../context/walletContext'\nimport { getTxns } from '../providers/wallets'\n\nconst Txn = (txn: any) => {\n  return (\n    <AccordionItem key={txn.node.id} textAlign=\"left\">\n      <AccordionButton key={txn.node.id + 'button'} bg=\"white\" border=\"1px\" borderColor=\"grey\">\n        <Text key={txn.node.id + 'display'} whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\">ID: {txn.node.id}</Text>\n        <AccordionIcon />\n      </AccordionButton>\n      <AccordionPanel border=\"1px\">\n        <Heading size=\"xs\" fontSize=\"12px\">Metadata</Heading>\n        <SimpleGrid columns={2}>\n          <Text fontSize={10}>Fee: </Text>\n          <Text fontSize={10}>{txn.node.fee.ar} AR</Text>\n          {txn.node.recipient && <React.Fragment><Text fontSize={10}>Recipient: </Text>\n            <Text fontSize={10}>{txn.node.recipient}</Text>\n            <Text fontSize={10}>Amount: </Text>\n            <Text fontSize={10}>{txn.node.quantity.ar} AR</Text></React.Fragment>}\n            {txn.node.owner && <React.Fragment><Text fontSize={10}>From: </Text>\n            <Text fontSize={10}>{txn.node.owner.address}</Text>\n            <Text fontSize={10}>Amount: </Text>\n            <Text fontSize={10}>{txn.node.quantity.ar} AR</Text></React.Fragment>}\n        </SimpleGrid>\n        {txn.node.tags.length > 0 && <Heading size=\"xs\" fontSize=\"12px\">Transaction Tags</Heading>}\n        {txn.node.tags.map((tag: any) => {\n          return (<SimpleGrid key={txn.node.id + tag.name} columns={2} textAlign=\"left\" overflow=\"auto\">\n            <Text fontSize={10} key={tag.toString()}>{tag.name}</Text>\n            <Text fontSize={10} key={tag.name + tag.value}>{tag.value}</Text>\n          </SimpleGrid>\n          )\n        })}\n      </AccordionPanel>\n    </AccordionItem>\n\n  )\n}\nconst Transactions = () => {\n  const { state } = React.useContext(WalletContext)\n  const [loading, setLoading] = React.useState(false)\n  const [txns, setTxns] = React.useState([])\n  const [name, setName] = React.useState('')\n  const [value, setValue] = React.useState('')\n  const [filter, setFilter] = React.useState('from')\n\n  React.useEffect(() => {\n    async function getTransactions () {\n      setLoading(true)\n      switch(filter) {\n      case 'from':\n        let fTxns = await getTxns({address : state.address})\n        setTxns(fTxns)\n        break;\n      case 'to':\n        let tTxns = await getTxns({ to: state.address})\n        setTxns(tTxns)\n        break;\n      default:\n        let Txns = await getTxns({ address: state.address })\n        setTxns(Txns)\n      }\n      setLoading(false)\n    }\n    if (state.address !== '') {\n      getTransactions()\n    }\n    else setTxns([])\n  }, [state.address, filter])\n\n  const retrieveTransactionsForTag = async () => {\n    setLoading(true)\n    let txns = await getTxns({ address: state.address, name: name, value: value})\n    setTxns(txns)\n    setLoading(false)\n  }\n\n  const getTxnsWithCursor = async () => {\n    setLoading(true)\n    //@ts-ignore\n    let cursor = txns[txns.length-1].cursor\n    let txnsWithCursor\n    filter === 'from' ? txnsWithCursor = await getTxns({ address: state.address, cursor: cursor})\n    :\n    txnsWithCursor = await getTxns({ to: state.address, cursor: cursor})\n    setTxns(txnsWithCursor)\n    setLoading(false)\n  }\n\n  return (<Box h=\"100%\">\n    <RadioGroup onChange={(evt) => setFilter(evt.toString())} value={filter} defaultValue=\"from\">\n      <Stack direction=\"row\" spacing={4}>\n        <Radio defaultChecked value=\"from\">From Wallet</Radio>\n        <Radio value=\"to\">To Wallet</Radio>\n      </Stack>\n    </RadioGroup>\n    {!loading ? <>\n     <Accordion allowToggle allowMultiple w=\"100%\">\n      {/* @ts-ignore */}\n      {txns.length > 0 ? txns.map((txn) => Txn(txn)) : null}\n    </Accordion>\n    <Button my={2} isDisabled={txns.length < 10} leftIcon={<FaCaretRight />} onClick={() => getTxnsWithCursor()}>Next 10</Button>\n      <Popover>\n        <PopoverTrigger>\n          <IconButton position=\"fixed\" bottom=\"6%\" left=\"5%\" aria-label=\"search transactions\" icon={<FaSearch />} />\n        </PopoverTrigger>\n        <PopoverContent>\n          <Stack>\n            <Input placeholder=\"Name\" value={name} onChange={(evt: React.ChangeEvent<HTMLInputElement>) => setName(evt.target.value)} />\n            <Input placeholder=\"Value\" value={value} onChange={(evt: React.ChangeEvent<HTMLInputElement>) => setValue(evt.target.value)} />\n            <Button isDisabled={(name === '' || value === '')}\n              onClick={() => {\n                retrieveTransactionsForTag()\n                setName('')\n                setValue('')\n              }}>\n              Search by Tag</Button>\n          </Stack>\n        </PopoverContent>\n      </Popover>\n    </>\n      :\n      <Spinner position=\"fixed\" bottom=\"50%\" right=\"50%\" />}\n  </Box>\n  )\n}\n\nexport default Transactions\n","import {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Heading,\n  Input,\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Skeleton,\n  Stack,\n  Text,\n  useClipboard,\n  useToast,\n} from \"@chakra-ui/core\";\nimport { generateMnemonic, getKeyFromMnemonic } from \"arweave-mnemonic-keys\";\nimport { set } from \"idb-keyval\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { FaCheck, FaGripHorizontal, FaKey, FaTrash } from \"react-icons/fa\";\nimport WalletContext, { wallet } from \"../context/walletContext\";\nimport { addWallet } from \"../providers/wallets\";\n\nconst WalletLoader = () => {\n  const toast = useToast();\n  const { state, dispatch } = React.useContext(WalletContext);\n  const [loading, setLoading] = React.useState(false);\n  const [address, setAddress] = React.useState(\"\");\n  const [copiedValue, setCopiedValue] = React.useState<string>(\"\");\n  const { onCopy } = useClipboard(copiedValue);\n\n  const onDrop = async (acceptedFiles: any) => {\n    const reader = new FileReader();\n    reader.onabort = () => console.log(\"file reading was aborted\");\n    reader.onerror = () => console.log(\"file reading has failed\");\n    reader.onload = async function (event) {\n      setLoading(true);\n      if (acceptedFiles[0].type === \"application/json\") {\n        try {\n          let walletObject = JSON.parse(event!.target!.result as string);\n          let walletDeets = await addWallet(walletObject);\n          await set(\"wallet\", JSON.stringify(walletObject));\n          dispatch({\n            type: \"ADD_WALLET\",\n            payload: { ...walletDeets, key: walletObject, mnemonic: walletObject.mnemonic },\n          });\n          set('wallets', JSON.stringify(state))\n        } catch (err) {\n          console.log(\"Invalid json in wallet file\");\n          toast({\n            title: \"Error loading wallet\",\n            status: \"error\",\n            duration: 3000,\n            position: \"bottom-left\",\n            description: \"Invalid JSON in wallet file\",\n          });\n        }\n      } else {\n        console.log(\"Invalid file type\");\n        toast({\n          title: \"Error loading wallet\",\n          status: \"error\",\n          duration: 3000,\n          position: \"bottom-left\",\n          description: \"Invalid file type\",\n        });\n      }\n      setLoading(false);\n    };\n    try {\n      reader.readAsText(acceptedFiles[0]);\n    } catch (err) {\n      console.log(\"Invalid file type\");\n      toast({\n        title: \"Error loading wallet\",\n        status: \"error\",\n        duration: 3000,\n        position: \"bottom-left\",\n        description: \"Invalid file type\",\n      });\n    }\n  };\n\n  const loadWalletFromMnemonic = async (mnemonic: string) => {\n    setLoading(true);\n    let walletObject = await getKeyFromMnemonic(mnemonic);\n    let walletDeets = await addWallet(walletObject);\n    await set(\"wallet\", JSON.stringify(walletObject));\n    setLoading(false);\n    dispatch({\n      type: \"ADD_WALLET\",\n      payload: { ...walletDeets, key: walletObject, mnemonic: mnemonic },\n    });\n    set('wallets', JSON.stringify(state))\n  };\n\n  const generateWallet = async () => {\n    setLoading(true);\n    let mnemonic = await generateMnemonic();\n    setAddress(mnemonic);\n    loadWalletFromMnemonic(mnemonic);\n  };\n\n  const addAddress = async () => {\n    setLoading(true);\n    let walletDeets = await addWallet(address);\n    dispatch({ type: \"ADD_WALLET\", payload: { ...walletDeets, key: \"\" } });\n    set('wallets', JSON.stringify(state))\n  };\n\n  const createWalletFile = async (wallet: wallet) => {\n    const blob = new Blob([JSON.stringify({...wallet.key, mnemonic: wallet.mnemonic}, null, 2)], {\n      type: \"application/json\",\n    });\n    const href = await URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = href;\n    link.download = `arweave-keyfile-${wallet.address}.json`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const switchWallet = async (address: string) => {\n    let wallet = await addWallet(address);\n    dispatch({\n      type: \"CHANGE_ACTIVE_WALLET\",\n      payload: { address: wallet.address, balance: wallet.balance },\n    });\n  };\n\n  return (\n    <Stack align=\"center\">\n      <Skeleton isLoaded={!loading}>\n        <Box w=\"100%\" borderStyle=\"dashed\" borderWidth=\"2px\" mb={2}>\n          <Dropzone onDrop={onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <section>\n                <div {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <Box flexDirection=\"row\" padding={3}>\n                    <Text fontSize={14} textAlign=\"center\">\n                      Drop a wallet file or click to load wallet\n                    </Text>\n                  </Box>\n                </div>\n              </section>\n            )}\n          </Dropzone>\n        </Box>\n        <Stack w=\"100%\" mb={2}>\n          <Heading size=\"xs\">Wallet mnemonic</Heading>\n          <Input\n            w=\"93%%\"\n            placeholder=\"Enter 12 word seedphrase\"\n            onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n              setAddress(evt.target.value);\n            }}\n          />\n          <Button\n            isDisabled={address === \"\"}\n            onClick={() => loadWalletFromMnemonic(address)}\n          >\n            Load Wallet\n          </Button>\n        </Stack>\n        <Stack w=\"100%\">\n          <Heading size=\"xs\">Track a Wallet</Heading>\n          <Input\n            w=\"93%%\"\n            placeholder=\"Enter a wallet address\"\n            onChange={(evt: React.ChangeEvent<HTMLInputElement>) => {\n              setAddress(evt.target.value);\n            }}\n          />\n          <Button isDisabled={address === \"\"} onClick={() => addAddress()}>\n            Track Address\n          </Button>\n         {/* <Button mt={2} onClick={generateWallet}>\n            Generate New Wallet\n          </Button>*/}\n        </Stack>\n      </Skeleton>\n      {state.address && (\n        <>\n          <Divider />\n          <Heading size=\"sm\">Loaded Wallets</Heading>\n        </>\n      )}\n      {state.wallets.length > 0 &&\n        state.wallets.map((wallet) => {\n          console.log(wallet);\n          return (\n            <Stack isInline align=\"start\">\n              <Popover>\n                <PopoverTrigger>\n                  <Text\n                    whiteSpace=\"nowrap\"\n                    overflow=\"hidden\"\n                    maxWidth=\"90vw\"\n                    textOverflow=\"ellipsis\"\n                    cursor=\"pointer\"\n                  >\n                    {wallet.address}\n                  </Text>\n                </PopoverTrigger>\n                <PopoverContent>\n                  <PopoverArrow />\n                  <PopoverBody>\n                    <Stack isInline justifyContent=\"space-around\">\n                      <Flex\n                        direction=\"column\"\n                        align=\"center\"\n                        justify=\"center\"\n                        key={wallet.address + \"pseudo2\"}\n                        as=\"button\"\n                        onClick={() => {\n                          switchWallet(wallet.address);\n                        }}\n                        alignContent=\"start\"\n                      >\n                        <FaCheck size={16} />\n                        <Text>Use</Text>\n                      </Flex>\n                      <Flex\n                        as=\"button\"\n                        direction=\"column\"\n                        align=\"center\"\n                        justify=\"center\"\n                        onClick={() => {\n                          dispatch({\n                            type: \"REMOVE_WALLET\",\n                            payload: { address: wallet.address },\n                          });\n                        }}\n                      >\n                        <FaTrash size={16} />\n                        <Text>Remove</Text>\n                      </Flex>\n                      <Flex\n                        as=\"button\"\n                        direction=\"column\"\n                        align=\"center\"\n                        justify=\"center\"\n                        onClick={() => createWalletFile(wallet)}\n                      >\n                        <FaKey size={16} />\n                        <Text>Download Keyfile</Text>\n                      </Flex>\n                      {wallet.mnemonic && (\n                        <Flex\n                          as=\"button\"\n                          direction=\"column\"\n                          align=\"center\"\n                          justify=\"center\"\n                          onClick={() => {\n                            if (wallet.mnemonic)\n                              setCopiedValue(wallet.mnemonic);\n                            onCopy();\n                          }}\n                        >\n                          <FaGripHorizontal size={16} />\n                          <Text>Copy Seedphrase</Text>\n                        </Flex>\n                      )}\n                    </Stack>\n                  </PopoverBody>\n                </PopoverContent>\n              </Popover>\n            </Stack>\n          );\n        })}\n    </Stack>\n  );\n};\n\nexport default WalletLoader;\n","import { walletState, wallet } from '../context/walletContext';\n\nconst walletReducer = (state: walletState, action: { type: string, payload: any }): walletState => {\n    console.log('Current state is:')\n    console.log(state)\n    console.log('Action requested is:')\n    console.log(action)\n    switch (action.type) {\n        case 'LOAD_STATE': {\n            return { ...action.payload.state }\n        }\n        case 'ADD_WALLET': {\n            let existingWallets = state.wallets?.filter((wallet: wallet)=> wallet.address === action.payload.address)\n            let wallets = state.wallets ? state.wallets : []\n            if (existingWallets && existingWallets.length === 0)\n                wallets?.push({address:action.payload.address, key:action.payload.key, mnemonic: action.payload.mnemonic})\n            return {\n            ...state,\n            key: action.payload.key,\n            balance: action.payload.balance,\n            address: action.payload.address,\n            mnemonic: action.payload.mnemonic,\n            wallets: wallets\n        }}\n        case 'UPDATE_TOKENS': {\n            return {\n                ...state,\n                tokens: action.payload.tokens\n            }\n        }\n        case 'SET_PICTURE': {\n            return {\n                ...state,\n                picture: action.payload.picture\n            }\n        }\n        case 'SET_BLOCK_HEIGHT': {\n            return {\n                ...state,\n                blockHeight: action.payload.blockHeight\n            }\n        }\n        case 'SET_TOKEN_ADDRESSES': {\n            return {\n                ...state,\n                tokenAddresses: action.payload.tokenAddresses\n            }\n        }\n        case 'CHANGE_ACTIVE_WALLET': {\n            let newWallet = state.wallets.find((wallet) => wallet.address === action.payload.address)\n            return {\n                ...state,\n                address: action.payload.address,\n                key: newWallet?.key,\n                balance: action.payload.balance,\n                mnemonic: newWallet?.mnemonic\n            }\n        }\n        case 'REMOVE_WALLET': {\n            let wallets = state.wallets.filter((wallet) => wallet.address !== action.payload.address)\n            if (wallets.length > 0)\n            return {\n                ...state,\n                wallets: wallets,\n                address: wallets[0]?.address,\n                key: wallets[0]?.key\n            }\n            else return {\n                ...state,\n                wallets: [],\n                address: '',\n                key: '',\n                balance: ''\n            }\n        }\n        default: return state\n    }\n}\n\nexport default walletReducer","import {\n  Box, ChakraProvider, Heading, Spinner, Stack, Tab, TabList, TabPanel, TabPanels, Tabs, theme\n} from '@chakra-ui/core';\nimport { get } from 'idb-keyval';\nimport React from 'react';\nimport { FaCameraRetro, FaUpload } from 'react-icons/fa';\nimport CameraWindow from './components/Camera';\nimport SmartweaveExplorer from './components/Smartweave';\nimport { SpeedDial, SpeedDialItem } from './components/SpeedDial';\nimport Tokens from './components/Tokens';\nimport TransactionDrawer from './components/TransactionDrawer';\nimport Transactions from './components/Transactions';\nimport WalletLoader from './components/WalletLoader';\nimport WalletContext, { initWalletState } from './context/walletContext';\nimport { getBlockHeight } from './providers/wallets';\nimport walletReducer from './reducers/walletReducer';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(walletReducer, initWalletState)\n  const [open, setOpen] = React.useState(false)\n  const [openCamera, setCamera] = React.useState(false)\n  const [loading, setLoading] = React.useState(true)\n\n  const handleClose = (modal: string) => {\n    if (modal === 'txn') setOpen(false);\n    if (modal === 'camera') setCamera(false)\n  }\n\n  // Retrieves block height for use in calculating approximate vaulted balance times for PSTs\n  React.useEffect(() => {\n    getBlockHeight().then((res) => dispatch({ type: 'SET_BLOCK_HEIGHT', payload: { blockHeight: res } }))\n  }, [])\n\n  React.useEffect(() => {\n    get('wallets').then((data: any) => {\n      if (data) {\n        let loadedState = JSON.parse(data)\n        dispatch({ type: 'LOAD_STATE', payload: { state: loadedState}})\n      }\n      setLoading(false)\n    })\n  }, [])\n\n  return (\n    <WalletContext.Provider value={{ dispatch, state }}>\n      <ChakraProvider theme={theme}>\n        <Stack w=\"100%\" align=\"center\" >\n          <Heading>ArMob 2.0</Heading>\n          <Tabs isFitted align=\"center\" variant=\"enclosed-colored\">\n            <TabPanels w=\"90vw\">\n              <TabPanel>\n                <WalletLoader />\n              </TabPanel>\n              <TabPanel>\n                {loading ? <Spinner position=\"fixed\" bottom=\"50%\" right=\"50%\" /> :\n                  state.address !== '' &&\n                  <Box>\n                    <Tokens />\n                  </Box>\n                }\n              </TabPanel>\n              <TabPanel>\n                {state.address !== '' &&\n                  <Transactions />\n                }\n              </TabPanel>\n              <TabPanel>\n                <SmartweaveExplorer />\n              </TabPanel>\n            </TabPanels>\n            <TabList position=\"fixed\" bottom=\"0px\" left=\"0px\" w=\"100vw\">\n              <Tab>Wallet</Tab>\n              <Tab isDisabled={state.address === ''}>Tokens</Tab>\n              <Tab isDisabled={state.address === ''}>Transactions</Tab>\n              <Tab isDisabled={state.key === ''}>Smartweave</Tab>\n            </TabList>\n          </Tabs>\n        </Stack>\n        {state.key && <SpeedDial>\n          {state.key && <SpeedDialItem key='faupload' icon={<FaUpload />} label=\"Upload File\" clickHandler={() => setOpen(true)} />\n          }\n          {state.key && <SpeedDialItem key='facameretro' icon={<FaCameraRetro />} label=\"Take Picture\" clickHandler={() => setCamera(true)} />}\n        </SpeedDial>}\n        <TransactionDrawer isOpen={open} close={() => handleClose('txn')} />\n        <CameraWindow isOpen={openCamera} close={() => handleClose('camera')} setTxnOpen={() => setOpen(true)} />\n      </ChakraProvider>\n    </WalletContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
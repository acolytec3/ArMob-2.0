{"version":3,"sources":["providers/wallets.ts","context/walletContext.ts","components/WalletLoader.tsx","reducers/walletReducer.ts","components/Transactions.tsx","components/SpeedDial.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["addWallet","wallet","a","arweave","Arweave","init","host","port","wallets","jwkToAddress","address","ar","getBalance","balance","winstonToAr","console","log","initWalletState","key","WalletContext","createContext","state","dispatch","WalletLoader","toast","useToast","React","useContext","useEffect","loadWallet","data","JSON","parse","walletDeets","type","payload","get","then","err","onDrop","acceptedFiles","reader","FileReader","onabort","onerror","onload","event","walletObject","target","result","set","stringify","title","status","duration","position","description","readAsText","Box","w","borderStyle","borderWidth","getRootProps","getInputProps","flexDirection","padding","Text","fontSize","textAlign","Stack","isInline","parseFloat","toFixed","toLocaleString","walletReducer","action","Transactions","useState","txns","setTxns","axios","post","query","res","transactions","edges","catch","length","map","txn","node","id","owner","Txn","SpeedDialItem","bottom","right","align","IconButton","aria-label","icon","FaWallet","isRound","onClick","del","SpeedDial","ref","isOpen","setIsOpen","wrapperRef","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","style","FaMinus","FaPlus","div","initial","opacity","animate","y","exit","App","useReducer","Provider","value","ThemeProvider","theme","justifySelf","Tabs","isFitted","left","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0598d310.chunk.js","sourcesContent":["import Arweave from 'arweave'\n\nexport const addWallet = async (wallet: any): Promise<{ address: string, balance: string }> => {\n    let arweave = Arweave.init({\n      host:'arweave.net',\n      port:443,\n    })\n    let address = await arweave.wallets.jwkToAddress(wallet)\n    let balance = arweave.ar.winstonToAr(await arweave.wallets.getBalance(address))\n    console.log(address);\n    console.log(balance);\n    return { address, balance }\n  }\n\n","import { createContext } from 'react'\n\nexport type walletState = {\n    key : any,\n    balance: string,\n    address: string\n}\nexport const initWalletState: walletState = {\n        key: {} as any,\n        balance: '',\n        address: ''\n}\n\nconst WalletContext = createContext<{state:walletState, dispatch: React.Dispatch<any>}>({state: initWalletState, dispatch: () => null} )\n\nexport { WalletContext as default }","import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport { Box, Stack, Text, useToast } from '@chakra-ui/core'\nimport { get, set} from 'idb-keyval'\nimport { addWallet } from '../providers/wallets'\nimport WalletContext from '../context/walletContext'\n\nconst WalletLoader = () => {\n  const toast = useToast()\n  const { state, dispatch } = React.useContext(WalletContext)\n\n  React.useEffect(() => {\n    const loadWallet = async (data: string) => {\n      let wallet = JSON.parse(data)\n      console.log(JSON.parse(data))\n      let walletDeets = await addWallet(wallet)\n      dispatch({ type: 'ADD_WALLET', payload: { ...walletDeets, key: wallet } })\n    }\n    get('wallet').then((data : any) => {\n    if (data) {\n      try{\n      loadWallet(data)\n      }\n      catch (err) { console.log('Error loading wallet', err)}\n    }})\n  },[])\n\n  const onDrop = async (acceptedFiles: any) => {\n    const reader = new FileReader()\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = async function (event) {\n      if (acceptedFiles[0].type === \"application/json\") {\n        try {\n          let walletObject = JSON.parse(event!.target!.result as string)\n          let walletDeets = await addWallet(walletObject)\n          await set('wallet', JSON.stringify(walletObject))\n          dispatch({ type: 'ADD_WALLET', payload: { ...walletDeets, key: walletObject } })\n        }\n        catch (err) {\n          console.log('Invalid json in wallet file')\n          toast({\n            title: 'Error loading wallet',\n            status: 'error',\n            duration: 3000,\n            position: 'bottom-left',\n            description: 'Invalid JSON in wallet file'\n          })\n        }\n      }\n      else {\n        console.log('Invalid file type')\n        toast({\n          title: 'Error loading wallet',\n          status: 'error',\n          duration: 3000,\n          position: 'bottom-left',\n          description: 'Invalid file type'\n        })\n      }\n    }\n    try {\n      reader.readAsText(acceptedFiles[0])\n    }\n    catch (err) {\n      console.log('Invalid file type')\n      toast({\n        title: 'Error loading wallet',\n        status: 'error',\n        duration: 3000,\n        position: 'bottom-left',\n        description: 'Invalid file type'\n      })\n    }\n  }\n\n  return (<Box>\n    {state.address === '' ? <Box w=\"100%\" borderStyle='dashed' borderWidth=\"2px\">\n      <Dropzone onDrop={onDrop} >\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              <Box flexDirection=\"row\" padding={3}><Text fontSize={14} textAlign=\"center\">Drop a wallet file or click to load wallet</Text></Box>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </Box>\n      :\n      <Stack isInline><Text>{state.address}</Text><Text>{parseFloat(state.balance).toFixed(4).toLocaleString()} AR</Text></Stack>}</Box>\n  )\n}\n\nexport default WalletLoader","import { walletState } from '../context/walletContext'\n\nconst walletReducer = (state: walletState, action: {type:string, payload: any}): walletState => {\n    console.log('Current state is:', state)\n    console.log('Action requested is:',action)\n    switch (action.type) {\n        case 'ADD_WALLET': return {...state, key: action.payload.key, balance: action.payload.balance, address: action.payload.address};\n        default: return state\n    }\n}\n\nexport default walletReducer","import React from 'react'\nimport axios from 'axios'\nimport { Box, Stack, Text, useToast } from '@chakra-ui/core'\nimport Smartweave from 'smartweave'\nimport WalletContext from '../context/walletContext'\n\nconst Txn = (txn: any) => {\n    return (\n        <Stack isInline>\n            <Text>ID: {txn.node.id}</Text>\n            <Text>Owner: {txn.node.owner.address}</Text>\n        </Stack>\n    )\n}\nconst Transactions = () => {\n    const { state } = React.useContext(WalletContext)\n    const [txns, setTxns] = React.useState([])\n    console.log(state.address)\n    React.useEffect(() => {\n        axios.post('https://arweave.net/graphql', {\n            query: `query {\n                transactions(owners:  [\"${state.address}\"]) {\n                  edges {\n                    node {\n                      id\n                      owner {\n                        address\n                      }\n                      recipient\n                      tags {\n                        name\n                        value\n                      }\n                      fee {\n                        winston\n                        ar\n                      }\n                      quantity {\n                        winston\n                        ar\n                      }\n                    }\n                  }\n                }\n              }`\n        })\n        .then((res) => {\n            console.log(res.data)\n            setTxns(res.data.data.transactions.edges)\n        })\n        .catch((err) => console.log(err))\n    },[])\n    return (<Box>\n        {/* @ts-ignore */}\n        {txns.length > 0 ? txns.map((txn) => Txn(txn)): null}</Box>\n    )\n}\n\nexport default Transactions","import React from 'react';\nimport { FaPlus, FaMinus, FaWallet } from 'react-icons/fa'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { Stack, IconButton, Text } from '@chakra-ui/core'\nimport { del } from 'idb-keyval'\nimport WalletContext from '../context/walletContext'\n\nconst SpeedDialItem = () => {\n  const { state, dispatch } = React.useContext(WalletContext)\n  return (\n    <Stack isInline\n      key=\"me\"\n      position=\"fixed\"\n      bottom=\"40px\"\n      right=\"0px\"\n      align=\"center\">\n      <Text fontSize={11}>{state.address === '' ? \"Open Wallet\" : \"Close Wallet\"}</Text>\n      <IconButton aria-label=\"wallet\" icon={FaWallet} isRound onClick={async () => {\n        if (state.address !== '') {\n          await del('wallet');\n          dispatch({ type: 'ADD_WALLET', payload: { address: '', balance: '', key: '' } });\n        }\n      }} />\n    </Stack>\n  )\n}\n\nconst SpeedDial = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const wrapperRef = React.useRef(null);\n\n  const useOutsideAlerter = (ref: any) => {\n    React.useEffect(() => {\n      function handleClickOutside(event: MouseEvent) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setIsOpen(false)\n        }\n      }\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n  useOutsideAlerter(wrapperRef);\n\n  return (<div ref={wrapperRef} style={{position: \"fixed\", bottom: \"20px\", right:\"20px\"}}>\n    <IconButton aria-label=\"open\" isRound icon={isOpen ? FaMinus : FaPlus}  onClick={() => setIsOpen(!isOpen)} />\n    <AnimatePresence>\n      {isOpen &&\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ y: -20, opacity: 1 }}\n          exit={{ y: 20, opacity: 0 }}\n        ><SpeedDialItem /></motion.div>}\n    </AnimatePresence>\n  </div>)\n}\n\nexport default SpeedDial","import React from 'react';\nimport { theme, Tabs, TabList, TabPanels, Tab, TabPanel, Text, ThemeProvider, Stack } from '@chakra-ui/core'\nimport WalletLoader from './components/WalletLoader'\nimport WalletContext, { initWalletState } from './context/walletContext'\nimport walletReducer from './reducers/walletReducer'\nimport Transactions from './components/Transactions';\nimport SpeedDial from './components/SpeedDial'\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(walletReducer, initWalletState)\n\n  return (\n    <WalletContext.Provider value={{ dispatch, state }}>\n      <ThemeProvider theme={theme}>\n        <Stack w=\"100%\" align=\"center\" >\n          <Stack isInline>\n            <Text>Armob V2</Text>\n            {state.balance !== '' && <Text justifySelf=\"end\">Balance: {state.balance}</Text>}</Stack>\n          <Tabs isFitted align=\"center\">\n            <TabPanels>\n              <TabPanel>\n                {state.address === '' ? <WalletLoader /> : <Transactions />}\n              </TabPanel>\n              <TabPanel>\n                <Text>Browser</Text>\n              </TabPanel>\n            </TabPanels>\n            <TabList position=\"fixed\" bottom=\"0px\" left=\"0px\" w=\"100vw\">\n              <Tab>Wallet</Tab>\n              <Tab>Browser</Tab>\n            </TabList>\n          </Tabs>\n        </Stack>\n        <SpeedDial />\n      </ThemeProvider>\n    </WalletContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}